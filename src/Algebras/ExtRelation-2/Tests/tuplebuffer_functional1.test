# This file is part of SECONDO.
#
# Copyright (C) 2009, University in Hagen, Department of Computer Science, 
# Database Systems for New Applications.
#
# SECONDO is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# SECONDO is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with SECONDO; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# An example test spec for the Secondo TestRunner
# run it with : 
#
#  TestRunner -i example.test
#
# By default a temporary database directory will be created. If you
# want to use existing databases run
#
#  TestRunner --no-tmp -i <file>
#
# If one of your tests (say number N ) reports an error you can run
# it directly by
#
# TestRunner -i <file> -num N 
#
# this is useful for debugging

set "SI:PrintCounters" = TRUE;
set "SI:PrintCmdTimes" = TRUE;
set "SI:NoQueryTimers" = TRUE;
set "SI:NoCommandEcho" = TRUE;
set "SI:RelStatistics" = TRUE;

##############################################################################
# Setup
##############################################################################

#setup tuplebuffer_functional1 StandardAlgebra RelationAlgebra ExtRelation2Algebra
restore database tmp_opt from '$(SECONDO_BUILD_DIR)/bin/opt'

##############################################################################
# TestCases
##############################################################################

#--------------------------------------------------  
# tuplebuffer - syntax test

#testcase teststep_1
#yields success
query plz feed tuplebuffer[0] consume;

#--------------------------------------------------  
# tuplebuffer - syntax test

#testcase teststep_2
#yields success
query plz feed tuplebuffer[1024] consume;

#--------------------------------------------------  
# tuplebuffer - syntax error

#testcase teststep_3
#yields error
query plz feed tuplebuffer consume;

#--------------------------------------------------  
# tuplebuffer - syntax error

#testcase teststep_4
#yields error
query plz feed tuplebuffer[] consume;

#--------------------------------------------------  
# tuplebuffer - (internal case, 16 MB buffer size)

#testcase teststep_6_create_result
#yields success
let result6 = plz feed consume;

#testcase teststep_6_compare_result
#yields *result6
query plz feed tuplebuffer[16*1024] consume;

#testcase teststep_6_delete_result
#yields success
delete result6;

#--------------------------------------------------  
# tuplebuffer - (mixed case, 0,5 MB buffer size)
# relation plz has about 0,7 MB size
# => 0,5 MB stored in memory, 0,2 MB on disc

#testcase teststep_7_create_result
#yields success
let result7 = plz feed consume;

#testcase teststep_7_compare_result
#yields *result7
query plz feed tuplebuffer[5] consume;

#testcase teststep_7_delete_result
#yields success
delete result7;

#--------------------------------------------------  
# tuplebuffer - (external case, 0 KByte buffer size)

#testcase teststep_8_create_result
#yields success
let result8 = plz feed consume;

#testcase teststep_8_compare_result
#yields *result8
query plz feed tuplebuffer[0] consume;

#testcase teststep_8_delete_result
#yields success
delete result8;

##############################################################################
# TearDown
##############################################################################

#teardown
close database;
delete database tmp_opt;

