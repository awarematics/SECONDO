Database: berlintest
Restore : No

Operator : csvexport
Number   : 1
Signature: stream(CVSEXPORTABLE) x text x bool -> stream[t]
Example  : query intstream(1,10) csvexport['ten.csv', FALSE] count
Result   : 10


Operator : csvexport
Number   : 2
Signature: stream(tuple(...)) x text x bool  x bool -> stream[t]
Example  : query intstream(1,10) transformstream csvexport['ten.csv', FALSE, TRUE] count
Result   : 10

Operator : csvexport
Number   : 3
Signature: stream(tuple(...)) x text x bool x x bool x string -> stream[t]
Example  : query intstream(1,10) transformstream csvexport['ten2.csv', FALSE, TRUE, ";"] count
Result   : 10


Operator  : csvimport
Number    : 1
Signature : rel(tuple(a_1 t1)..(a_n t_n)) x text x int x string -> stream(tuple(...)), t_i in CSVIMPORTABLE
Example   : query ten csvimport['ten.csv',1,""] count
Result    : 10


Operator  : csvimport
Number    : 2
Signature : rel(tuple(a_1 t1)..(a_n t_n)) x text x int x string x string -> stream(tuple(...)), t_i in CSVIMPORTABLE
Example   : query ten csvimport['ten2.csv',1,"",";"] count
Result    : 10

Operator  : csvimport2
Number    : 1
Signature : text x int x string x string x bool x bool -> stream(tuple(...)), 
Example   : query csvimport2('ten.csv',1,"","",FALSE,FALSE) count
Result    : 10


Operator : db3export
Number   : 1
Signature: stream(tuple) x text -> stream(tuple)
Example  : query intstream(1,10) transformstream db3export['ten.dbf'] count
Result   : 10


Operator : dbtype
Number   : 1
Signature: text -> text
Example  : query dbtype('ten.dbf')
Result   : '[const rel(tuple([Elem : int])) value ()]'


Operator : dbimport
Number   : 1
Signature: rel(tuple(...)) x text  -> stream(tuple(...))
Example  : query  [const rel(tuple([Elem : int ] )) value ()] dbimport['ten.dbf'] count
Result   : 10

Operator : dbimport2
Number   : 1
Signature: text  -> stream(tuple(...))
Example  : query  dbimport2('ten.dbf') count
Result   : 10

Operator : shpexport
Number   : 1
Signature: stream(s) x text  -> stream(s) , s in {Point, Points, Line }
Example  : query  Kinos feed projecttransformstream[GeoData] shpexport['kinos.shp'] count
Result   : 83


Operator : shpexport
Number   : 2
Signature: stream(tuple(...) x text x id  -> stream(tuple(...))
Example  : query  Kinos feed shpexport['kinos.shp',GeoData] count
Result   : 83


Operator : shpexport
Number   : 3
Signature: stream(s) x text x text -> stream(s) , s in {Point, Points, Line }
Example  : query  Kinos feed projecttransformstream[GeoData] shpexport['kinos.shp','kinos.idx'] count
Result   : 83


Operator : shpexport
Number   : 4
Signature: stream(tuple(...) x text x id  x text -> stream(tuple(...))
Example  : query  Kinos feed shpexport['kinos.shp',GeoData,'kinos.idx'] count
Result   : 83


Operator : shptype
Number   : 1
Signature: text -> text
Example  : query  shptype('kinos.shp')
Result   : '[const point value (0 0)]'


Operator : shpimport
Number   : 1
Signature: T x text  -> stream(T)
Example  : query  [const point value (0 0)] shpimport['kinos.shp'] count
Result   : 83



Operator : shpimport2
Number   : 1
Signature: text  -> stream(T)
Example  : query  shpimport2('kinos.shp') count
Result   : 83




Operator : saveObject
Number   : 1
Signature: T x string x text -> bool
Example  : query (3 + 4) saveObject["seven",'seven.obj']
Result   : TRUE

Operator : isFile
Number   : 1
Signature: string -> bool
Example  : query isFile("SecondoTTYBDB")
Result   : TRUE

Operator : isFile
Number   : 2
Signature: text -> bool
Example  : query isFile('SecondoTTYBDB')
Result   : TRUE

Operator : removeFile
Number   : 1
Signature: string -> bool
Example  : query removeFile("Blabberblubb.dir")
Result   : TRUE

Operator : removeFile
Number   : 2
Signature: text -> bool
Example  : query removeFile('Blabberblubb.dir')
Result   : FALSE

Operator : createDirectory
Number   : 1
Signature: string -> bool
Example  : query createDirectory("Blabberblubb.dir")
Result   : TRUE

Operator : createDirectory
Number   : 2
Signature: text -> bool
Example  : query createDirectory('Blabberblubb.dir')
Result   : FALSE

Operator : fileSize
Number   : 1
Signature: string [ x bool ] -> int
Example  : query fileSize("Blabberblubb.dir") >= [const int value undef]
Result   : TRUE

Operator : fileSize
Number   : 2
Signature: text [ x bool ] -> int
Example  : query isdefined(fileSize('Blabberblubb1.dir'))
Result   : FALSE

Operator : isDirectory
Number   : 1
Signature: string -> bool
Example  : query isDirectory("Blabberblubb.dir")
Result   : TRUE

Operator : isDirectory
Number   : 2
Signature: text -> bool
Example  : query isDirectory('Blabberblubb1.dir')
Result   : FALSE

Operator : writeFile
Number   : 1
Signature: string x string [ x bool ] -> bool
Example  : query writeFile("Hello World!", "writeFileTest")
Result   : TRUE

Operator : writeFile
Number   : 2
Signature: string x text [ x bool ] -> bool
Example  : query writeFile("Hello World!", 'writeFileTest', FALSE)
Result   : TRUE

Operator : writeFile
Number   : 3
Signature: text x string [ x bool ] -> bool
Example  : query writeFile('Hello World!', "writeFileTest", TRUE)
Result   : TRUE

Operator : writeFile
Number   : 4
Signature: text x text [ x bool ] -> bool
Example  : query writeFile("Hello World!", "writeFileTest")
Result   : TRUE

Operator : readFile
Number   : 1
Signature: string -> text
Example  : query length(readFile("ten.csv"))
Result   : (platform (linux (int 26)) (linux64 (int 26)) (win32 (int 37))(mac_osx (int 26)))

Operator : readFile
Number   : 2
Signature: text -> text
Example  : query length(readFile('ten.csv'))
Result   : (platform (linux (int 26)) (linux64 (int 26)) (win32 (int 37))(mac_osx (int 26)))


Operator : moveFile
Number   : 1
Signature: string x string -> bool
Example  : query moveFile("opt","opt2")
Result   : TRUE

Operator : moveFile
Number   : 2
Signature: string x text -> bool
Example  : query moveFile("opt2",'opt3')
Result   : TRUE

Operator : moveFile
Number   : 3
Signature: text x string -> bool
Example  : query moveFile('opt3',"opt4")
Result   : TRUE

Operator : moveFile
Number   : 4
Signature: text x text -> bool
Example  : query moveFile('opt4','opt')
Result   : TRUE

Operator : getDirectory
Number   : 1
Signature: string [ x int ] -> stream(text)
Example  : query (getDirectory(".") count) > 1
Result   : TRUE

Operator : getDirectory
Number   : 2
Signature: text [ x int ] -> stream(text)
Example  : query (getDirectory('.',10) count) > 1
Result   : TRUE

Operator : toCSVtext
Number   : 1
Signature: CSVEXPORTABLE -> text
Example  : query toCSVtext(TRUE)
Result   : 'true'

Operator : fromCSVtext
Number   : 1
Signature: CSVIMPORTABLE x text -> CSVIMPORTABLE
Example  : query fromCSVtext(TRUE, 'TRUE')
Result   : TRUE

Operator : fromCSVtext
Number   : 2
Signature: CSVIMPORTABLE x string -> CSVIMPORTABLE
Example  : query fromCSVtext(TRUE, "")
Result   : (bool undefined)

Operator : getPID
Number   : 1
Signature: -> int
Example  : query getPID() > 0
Result   : (bool TRUE)

Operator : getSecondoVersion
Number   : 1
Signature: -> string
Example  : query fromCSVtext( 1, tostring(replace((totext( getSecondoVersion() ) sentences transformstream extract[Elem]),".","") ) ) >= 3
Result   : (bool TRUE)

Operator : getBDBVersion
Number   : 1
Signature: -> string
Example  : query fromCSVtext( 1, tostring(replace((totext( getBDBVersion() ) sentences transformstream extract[Elem]),".","") ) ) >= 4
Result   : (bool TRUE)

Operator : getSecondoPlatform
Number   : 1
Signature: -> string
Example  : query getSecondoPlatform()
Result   : (platform (linux (string "linux")) (linux64 (string "linux64")) (win32 (string "win32")) (mac_osx (string "mac_osx")))

Operator : getPageSize
Number   : 1
Signature: -> int
Example  : query getPageSize() > 0
Result   : (bool TRUE)


Operator : nmeaimport
Number   : 1
Signature: text x string -> stream(tuple(...))
Example  : query nmeaimport('../Data/import/tripHA_Boeler_Uni.trc',"GGA") count
Result   : 441

Operator : nmeaimport_line
Number   : 1
Signature: text x string -> stream(tuple(...))
Example  : query nmeaimport_line('$GPGGA,094154.384,5131.2913,N,00726.9363,E,0,0,,102.5,M,47.5,M,,*42', "GGA") extract[FixQuality]
Result   : 0


Operator : get_lines
Number   : 1
Signature: text -> stream(text)
Example  : query get_lines('ten.csv') count
Result   : 11


Operator : get_lines
Number   : 2
Signature: string -> stream(text)
Example  : query get_lines("ten.csv") count
Result   : 11

Operator : sqlExport
Number   : 1
Signature: stream(tuple) x text x string x bool  -> bool
Example  : query ten feed sqlExport['ten.sql',"Ten",TRUE]
Result   : TRUE


Operator : importHGT1
Number   : 1
Signature: text -> stream(tuple([R : rect, V : int))
Example  : query importHGT1('N51E007.hgt') count
Result  : 1442401





