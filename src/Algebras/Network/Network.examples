Database: networktest
Restore : yes

Operator : junctions
Number   : 1
Signature: network -> rel
Example  : query junctions(B_NETWORK);
Result   : file

Operator : routes
Number   : 1
Signature: network -> rel
Example  : query routes(B_NETWORK);
Result   : file

Operator : sections
Number   : 1
Signature: network -> rel
Example  : query sections(B_NETWORK);
Result   : file

Operator : thenetwork
Number   : 1
Signature: int x real x rel x rel -> network
Example  : query thenetwork(1, 1.0, B_ROUTES, B_JUNCTIONS);
Result   : file_platform

Operator : spsearchvisited
Number   : 1
Signature: gpoint x gpoint x bool -> stream(tuple((Rid int) (Meas1 real) (Meas2 real) (Dual bool) (Curve sline)(CurveStartsSmaller bool) (Rrc tid) (Sid int)))
Example  : query spsearchvisited([const gpoint value(1 1 1.0 2)], [const gpoint value(1 2 1.0 2)], TRUE) consume;
Result   : file

Operator : spsearchvisited
Number   : 2
Signature: gpoint x gpoint x bool -> stream(tuple((Rid int) (Meas1 real) (Meas2 real) (Dual bool) (Curve sline)(CurveStartsSmaller bool) (Rrc tid) (Sid int)))
Example  : query spsearchvisited([const gpoint value(1 1 1.0 2)], [const gpoint value(1 2 1.0 2)], FALSE) consume;
Result   : file

Operator : spsearchvisited
Number   : 3
Signature: gline x gline x bool -> stream(tuple((Rid int) (Meas1 real) (Meas2 real) (Dual bool) (Curve sline)(CurveStartsSmaller bool) (Rrc tid) (Sid int)))
Example  : query spsearchvisited([const gline value(1((1 0.0 0.5)))],[const gline value(1((2 0.7 1.5)))], FALSE) consume;
Result   : file

Operator : spsearchvisited
Number   : 4
Signature: gpoints x gpoints x bool -> stream(tuple((Rid int) (Meas1 real) (Meas2 real) (Dual bool) (Curve sline)(CurveStartsSmaller bool) (Rrc tid) (Sid int)))
Example  : query spsearchvisited([const gpoints value((1 1 0.5 2))],[const gpoints value((1 2 0.7 2)(1 2 1.5 2))], FALSE) consume;
Result   : file

Operator : spsearchvisited
Number   : 5
Signature: gline x gline x bool -> stream(tuple((Rid int) (Meas1 real) (Meas2 real) (Dual bool) (Curve sline)(CurveStartsSmaller bool) (Rrc tid) (Sid int)))
Example  : query spsearchvisited([const gline value(1((1 0.0 0.5)))],[const gline value(1((2 0.7 1.5)))], TRUE) consume;
Result   : file

Operator : spsearchvisited
Number   : 6
Signature: gpoint x gline x bool -> stream(tuple((Rid int) (Meas1 real) (Meas2 real) (Dual bool) (Curve sline)(CurveStartsSmaller bool) (Rrc tid) (Sid int)))
Example  : query spsearchvisited([const gpoint value(1 1 1.0 2)],[const gline value(1((2 0.7 1.5)))], FALSE) consume;
Result   : file

Operator : spsearchvisited
Number   : 7
Signature: gpoint x gpoints x bool -> stream(tuple((Rid int) (Meas1 real) (Meas2 real) (Dual bool) (Curve sline)(CurveStartsSmaller bool) (Rrc tid) (Sid int)))
Example  : query spsearchvisited([const gpoint value(1 1 1.0 2)],[const gpoints value((1 2 0.7 2)(1 2 1.5 2))], FALSE) consume;
Result   : file

Operator : spsearchvisited
Number   : 8
Signature: gline x gpoint x bool -> stream(tuple((Rid int) (Meas1 real) (Meas2 real) (Dual bool) (Curve sline)(curveStartsSmaller bool) (Rrc tid) (Sid int)))
Example  : query spsearchvisited([const gline value(1((1 0.0 0.5)))],[const gpoint value(1 2 1.5 2)], FALSE) consume;
Result   : file

Operator : spsearchvisited
Number   : 9
Signature: gline x gpoints x bool -> stream(tuple((Rid int) (Meas1 real) (Meas2 real) (Dual bool) (Curve sline)(CurveStartsSmaller bool) (Rrc tid) (Sid int)))
Example  : query spsearchvisited([const gline value(1((1 0.0 0.5)))],[const gpoints value((1 2 1.5 2))], FALSE) consume;
Result   : file

Operator : spsearchvisited
Number   : 10
Signature: gpoints x gpoint x bool -> stream(tuple((Rid int) (Meas1 real) (Meas2 real) (Dual bool) (Curve sline)(CurveStartsSmaller bool) (Rrc tid) (Sid int)))
Example  : query spsearchvisited([const gpoints value((1 1 0.5 2))],[const gpoint value(1 2 0.7 2)], FALSE) consume;
Result   : file

Operator : spsearchvisited
Number   : 11
Signature: gpoints x gline x bool -> stream(tuple((Rid int) (Meas1 real) (Meas2 real) (Dual bool) (Curve sline)(CurveStartsSmaller bool) (Rrc tid) (Sid int)))
Example  : query spsearchvisited([const gpoints value((1 1 0.5 2))],[const gline value(1 ((2 0.7 1.5)))], FALSE) consume;
Result   : file

Operator : shortest_path
Number   : 1
Signature: gpoint x gpoint -> gline
Example  : query shortest_path([const gpoint value(1 1 1.0 2)], [const gpoint value(1 2 1.0 2)]);
Result   : (gline(1((1 1.0 773.1299430080975)(2 0.0 1.0))))
Tolerance: %0.01

Operator : shortest_path
Number   : 2
Signature: gpoint x gpoint -> gline
Example  : query shortest_path([const gpoint value (1 1 0.0 0)],[const gpoint value(1 1 0.5 0)]);
Result   : (gline(1((1 0.0 0.5))))
Tolerance: %0.01

Operator : shortest_pathastar
Number   : 1
Signature: gpoint x gpoint -> gline
Example  : query shortest_pathastar([const gpoint value(1 1 1.0 2)], [const gpoint value(1 2 1.0 2)]);
Result   : (gline(1((1 1.0 773.1299430080975)(2 0.0 1.0))))
Tolerance: %0.01

Operator : shortest_pathastar
Number   : 2
Signature: gpoint x gpoint -> gline
Example  : query shortest_pathastar([const gpoint value (1 1 0.0 0)],[const gpoint value(1 1 0.5 0)]);
Result   : (gline(1((1 0.0 0.5))))
Tolerance: %0.01

Operator : shortest_pathastar
Number   : 3
Signature: gline x gline -> gline
Example  : query shortest_pathastar([const gline value(1((1 0.0 0.5)))],[const gline value(1((2 0.7 1.5)))])
Result   : (gline(1((1 0.5 773.1299430080975)(2 0.0 0.7))))
Tolerance: &0.01

Operator : shortest_pathastar
Number   : 4
Signature: gpoints x gpoints -> gline
Example  : query shortest_pathastar([const gpoints value((1 1 0.5 2))],[const gpoints value((1 2 0.7 2)(1 2 1.5 2))])
Result   : (gline(1((1 0.5 773.1299430080975)(2 0.0 0.7))))
Tolerance: &0.01

Operator : shortest_pathastar
Number   : 5
Signature: gpoint x gline -> gline
Example  : query shortest_pathastar([const gpoint value(1 1 1.0 2)], [const gline value(1((2 0.7 1.5)))]);
Result   : (gline(1((1 1.0 773.1299430080975)(2 0.0 0.7))))
Tolerance: %0.01

Operator : shortest_pathastar
Number   : 6
Signature: gpoint x gpoints -> gline
Example  : query shortest_pathastar([const gpoint value(1 1 0.5 2)],[const gpoints value((1 2 0.7 2)(1 2 1.5 2))])
Result   : (gline(1((1 0.5 773.1299430080975)(2 0.0 0.7))))
Tolerance: &0.01

Operator : shortest_pathastar
Number   : 7
Signature: gline x gpoint -> gline
Example  : query shortest_pathastar([const gline value(1((1 0.0 0.5)))],[const gpoint value(1 2 0.7 2)])
Result   : (gline(1((1 0.5 773.1299430080975)(2 0.0 0.7))))
Tolerance: &0.01

Operator : shortest_pathastar
Number   : 8
Signature: gline x gpoints -> gline
Example  : query shortest_pathastar([const gline value(1((1 0.0 0.5)))],[const gpoints value((1 2 0.7 2))])
Result   : (gline(1((1 0.5 773.1299430080975)(2 0.0 0.7))))
Tolerance: &0.01

Operator : shortest_pathastar
Number   : 9
Signature: gpoints x gpoint -> gline
Example  : query shortest_pathastar([const gpoints value((1 1 0.5 2))],[const gpoint value(1 2 0.7 2)])
Result   : (gline(1((1 0.5 773.1299430080975)(2 0.0 0.7))))
Tolerance: &0.01

Operator : shortest_pathastar
Number   : 10
Signature: gpoints x gline -> gline
Example  : query shortest_pathastar([const gpoints value((1 1 0.5 2))],[const gline value(1((2 0.7 1.5)))])
Result   : (gline(1((1 0.5 773.1299430080975)(2 0.0 0.7))))
Tolerance: &0.01

Operator : length
Number   : 1
Signature: gline -> real
Example  : query length([const gline value(1((1 1.0 773.1299430080975)(2 0.0 1.0)))]);
Result   : 773.1299430081
Tolerance:%0.01

Operator : isempty
Number   : 1
Signature: gline -> bool
Example  : query isempty([const gline value(1((1 0.0 0.5)))]);
Result   : FALSE

Operator : netdistance
Number   : 1
Signature: gpoint x gpoint -> real
Example  : query netdistance([const gpoint value(1 1 1.0 2)], [const gpoint value(1 2 1.0 2)]);
Result   : 773.1299430080975
Tolerance:%0.01

Operator : netdistance
Number   : 2
Signature: gline x gline -> real
Example  : query netdistance([const gline value(1((1 0.0 1.0)))], [const gline value(1((2 1.0 1.5)))]);
Result   : 773.6299430080975
Tolerance:%0.01

Operator : netdistancenew
Number   : 1
Signature: gpoint x gpoint -> real
Example  : query netdistancenew([const gpoint value(1 1 1.0 2)], [const gpoint value(1 2 1.0 2)]);
Result   : 773.1299430080975
Tolerance:%0.01

Operator : netdistancenew
Number   : 2
Signature: gline x gline -> real
Example  : query netdistancenew([const gline value(1((1 0.0 0.5)))], [const gline value(1((2 0.7 1.5)))]);
Result   : 773.3299430080975
Tolerance:%0.01

Operator : netdistancenew
Number   : 3
Signature: gpoints x gpoints -> real
Example  : query netdistancenew([const gpoints value((1 1 0.5 2))],[const gpoints value((1 2 0.7 2)(1 2 1.5 2))]);
Result   : 773.3299430080975
Tolerance:%0.01

Operator : netdistancenew
Number   : 4
Signature: gpoint x gline -> real
Example  : query netdistancenew([const gpoint value(1 1 1.0 2)], [const gline value(1((2 1.0 2.0)))]);
Result   : 773.1299430080975
Tolerance:%0.01

Operator : netdistancenew
Number   : 5
Signature: gpoint x gpoints -> real
Example  : query netdistancenew([const gpoint value(1 1 1.0 2)], [const gpoints value((1 2 1.0 2))]);
Result   : 773.1299430080975
Tolerance:%0.01

Operator : netdistancenew
Number   : 6
Signature: gline x gpoint -> real
Example  : query netdistancenew([const gline value(1((1 0.0 0.5)))], [const gpoint value(1 2 0.7 2)]);
Result   : 773.3299430080975
Tolerance:%0.01

Operator : netdistancenew
Number   : 7
Signature: gline x gpoints -> real
Example  : query netdistancenew([const gline value(1((1 0.0 0.5)))], [const gpoints value((1 2 0.7 2))]);
Result   : 773.3299430080975
Tolerance:%0.01

Operator : netdistancenew
Number   : 8
Signature: gpoints x gpoint -> real
Example  : query netdistancenew([const gpoints value((1 1 0.5 2))],[const gpoint value(1 2 0.7 2)]);
Result   : 773.3299430080975
Tolerance:%0.01

Operator : netdistancenew
Number   : 9
Signature: gpoints x gline -> real
Example  : query netdistancenew([const gpoints value((1 1 0.5 2))],[const gline value(1 ((2 0.7 1.5)))]);
Result   : 773.3299430080975
Tolerance:%0.01

Operator : distance
Number   : 1
Signature: gpoint x gpoint -> real
Example  : query distance([const gpoint value(1 1 0.8 2)], [const gpoint value (1 1 0.2 2)]);
Result   : 0.6
Tolerance:%0.01

Operator : distance
Number   : 2
Signature: gline x gline -> real
Example  : query distance([const gline value(1((1 0.0 0.5)))], [const gline value(1((1 0.7 1.5)))]);
Result   : 0.2
Tolerance:%0.01

Operator : point2gpoint
Number   : 1
Signature: point -> gpoint
Example  : query point2gpoint(B_NETWORK, [const point value(8594.0 8773.0)]);
Result   : (gpoint (1 4 0.0 2))
Tolerance:%0.01

Operator : gpoint2point
Number   : 1
Signature: gpoint -> point
Example  : query gpoint2point([const gpoint value(1 1 385.0474775448921 2)]);
Result   : (point (8594.0 8773.0))
Tolerance:%0.01

Operator : =
Number   : 1
Signature: gpoint x gpoint -> bool
Example  : query [const gpoint value(1 1 1.0 2)] = [const gpoint value(1 2 1.0 2)];
Result   : FALSE

Operator : =
Number   : 2
Signature: gpoint x gpoint -> bool
Example  : query [const gpoint value(1 1 1.0 2)] = [const gpoint value(1 1 1.0 2)];
Result   : TRUE

Operator : =
Number   : 3
Signature: gline x gline -> bool
Example  : query [const gline value(1((1 0.0 0.5)))] = [const gline value(1((1 0.0 0.5)))];
Result   : TRUE

Operator : =
Number   : 4
Signature: gline x gline -> bool
Example  : query [const gline value(1((1 0.0 1.5)))] = [const gline value(1((1 0.0 0.5)))];
Result   : FALSE

Operator : line2gline
Number   : 1
Signature: line -> gline
Example  : query line2gline(B_NETWORK, [const line value((8594.0 8773.0 8982.0 8781.0))]);
Result   : (gline (1 ((1 385.0474775448921 773.1299430080975))))
Tolerance:%0.01

Operator : inside
Number   : 1
Signature: gpoint x gline -> bool
Example  : query [const gpoint value (1 1 0.8 2)] inside  [const gline value(1((1 0.7 1.5)))];
Result   : TRUE

Operator : inside
Number   : 2
Signature: gpoint x gline -> bool
Example  : query [const gpoint value (1 1 5.2 2)] inside [const gline value (1 ((1 0.0 5.0)))];
Result   : FALSE

Operator : no_components
Number   : 1
Signature: gline -> int
Example  : query no_components([const gline value(1((1 0.0 0.5)))]);
Result   : 1

Operator : polygpoints
Number   : 1
Signature: gpoint x network -> stream(gpoint)
Example  : query polygpoints([const gpoint value(1 1 1.0 2)], B_NETWORK) count;
Result   : 1

Operator : routeintervals
Number   : 1
Signature: gline -> stream(rect)
Example  : query routeintervals([const gline value(1((1 0.0 0.5)))]) count;
Result   : 1

Operator : routeintervals
Number   : 2
Signature: gline -> stream(rect)
Example  : query routeintervals([const gline value(1((1 0.0 0.5)(2 0.1 6.5)(4 2.4 3.5)))]) count;
Result   : 3

Operator : intersects
Number   : 1
Signature: gline x gline -> bool
Example  : query [const gline value(1((1 0.0 0.5)))] intersects [const gline value(1((1 0.7 1.5)))];
Result   : FALSE

Operator : intersects
Number   : 2
Signature: gline x gline -> bool
Example  : query [const gline value(1((1 0.0 0.5)))] intersects [const gline value(1((1 0.2 1.5)))];
Result   : TRUE

Operator : gpoint2rect
Number   : 1
Signature: gpoint -> rect
Example  : query gpoint2rect([const gpoint value (1 1 0.8 2)]);
Result   : (rect(1.0 1.0 0.8 0.8))
Tolerance: 0.01%

Operator : gline2line
Number   : 1
Signature: gline -> line
Example  : query gline2line([const gline value(1((1 0.0 1013.204931293)))]);
Result   : (line((8209.0 8769.0 8293.0 8768.0)(8293.0 8768.0 8594.0 8773.0)(8594.0 8773.0 8982.0 8781.0)(8982.0 8781.0 9222.0 8787.0)))
Tolerance: 0.01%

Operator : union
Number   : 1
Signature: gline x gline -> gline
Example  : query [const gline value(1((1 0.0 0.5)))] union [const gline value(1((1 0.7 1.5)))];
Result   : (gline(1((1 0.0 0.5) (1 0.7 1.5))))

Operator : union
Number   : 2
Signature: gline x gline -> gline
Example  : query [const gline value(1((1 0.0 0.5)))] union [const gline value(1((1 0.2 1.5)))];
Result   : (gline(1((1 0.0 1.5))))

Operator : getBGP
Number   : 1
Signature: gline -> gpoints
Example  : query getBGP([const gline value(1((1 0.0 100.5)(3 4.5 34.0)))])
Result   : (gpoints((1 1 100.5 2)(1 3 4.5 2)(1 3 34.0 2)))

Operator : shortestpathtree
Number   : 1
Signature: gpoint x network -> stream(tuple((int)(real)))
Example  : query shortestpathtree([const gpoint value(1 1 0.5 2)], B_NETWORK) consume;
Result   : file

Operator : getAdjacentSections
Number   : 1
Signature: network X int X bool -> stream(tuple(int bool)))
Example  : query getAdjacentSections(B_NETWORK, 1, TRUE) consume;
Result   : file

Operator : getReverseAdjacentSections
Number   : 1
Signature: network X int X bool -> stream(tuple(int bool)))
Example  : query getReverseAdjacentSections(B_NETWORK, 2, TRUE) consume;
Result   : file

Operator : circlen
Number   : 1
Signature: gpoint x real -> gline
Example  : query circlen([const gpoint value (1 1 30.0 2)], 15.5);
Result   : (gline(1((1 14.5 45.5))))
Tolerance: 0.01%

Operator : in_circlen
Number   : 1
Signature: gpoint x real -> gline
Example  : query in_circlen([const gpoint value (1 1 30.0 2)], 15.5);
Result   : (gline(1((1 14.5 45.5))))
Tolerance: 0.01%

Operator : out_circlen
Number   : 1
Signature: gpoint x real -> gline
Example  : query out_circlen([const gpoint value (1 1 30.0 2)], 15.5);
Result   : (gline(1((1 14.5 45.5))))
Tolerance: 0.01%

Operator : netbbox
Number   : 1
Signature: network -> rect2
Example  : query netbbox(B_NETWORK);
Result   : (rect(7734.99999999 10542.00000001 8767.999999989999 10233.00000001))
Tolerance: 0.01%
