Database: berlintest
Restore : No

Operator : STREAMELEM2
Number   : 1
Signature: (T1 (stream T2) ... ) -> T2
Example  : query 3 feed 2 feed use2[fun(X: int, Y: STREAMELEM2) X+Y ] count
Result   : 1


Operator : STREAMELEM
Number   : 1
Signature: ((stream T1) ... ) -> T1
Example  : query 3 feed 2 feed use2[fun(X: STREAMELEM, Y: int) X+Y ] count
Result   : 1


Operator : aggregateS
Number   : 1
Signature: ((stream T) ((T T) -> T) T ) -> T
Example  : query intstream(1,5) aggregateS[ fun(i1:int, i2:int) i1+i2 ; 0]
Result   : 15


Operator : count
Number   : 1
Signature:((stream T)) -> int
Example  : query intstream (1,10) count
Result   : 10

Operator : echo
Number   : 1
Signature:stream(T) x bool x string  -> stream(T)
Example  : query intstream (1,10) echo [TRUE, "Test"]  count
Result   : 10

Operator : echo
Number   : 2
Signature: T x string  -> T , T # stream
Example  : query  3 + 5 echo["Test"]
Result   : 8


Operator : feed
Number   : 1
Signature:T -> (stream T)
Example  : query 5 feed count;
Result   : 1


Operator : filter
Number   : 1
Signature:((stream T) (map T bool)) -> (stream T)
Example  : query intstream (1,10) filter[. > 7] count
Result   : 3

Operator : namedtransformstream
Number   : 1
Signature: (stream T) x attrname  -> stream(tuple((attrname T)))
Example  : query intstream(1,5) namedtransformstream [Number] count
Result   : 5

Operator : printstream
Number   : 1
Signature:((stream T)) -> (stream T)
Example  : query intstream (1,10) printstream count
Result   : 10

Operator : printstream
Number   : 2
Signature:((stream(tuple( T))) -> (stream(tuple (T)))
Example  : query intstream (1,10) transformstream printstream count
Result   : 10

Operator : transformstream
Number   : 1
Signature: (stream T) -> stream(tuple((Elem T)))
Example  : query intstream(1,5) transformstream transformstream count
Result   : 5

Operator : transformstream
Number   : 2
Signature: stream(tuple(attrname T)) -> (stream T)
Example  : query ten feed transformstream printstream count
Result   : 10

Operator : projecttransformstream
Number   : 1
Signature: stream(tuple((a1 t1)...(an tn))) x ai -> stream(ti)
Example  : query Staedte feed projecttransformstream [PLZ] printstream count
Result   : 58

Operator : use2
Number   : 1
Signature: ((stream X) Y (map X Y stream(Z)) ) -> (stream Z)
Example  : query intstream(1,5) 5 use2[ fun(i:int, j:int) intstream(i,j) ] count;
Result   : 15

Operator : use2
Number   : 2
Signature: (X (stream Y) (map X Y Z) ) -> (stream Z)
Example  : query 3 intstream(1,5) use2[ fun(i:int, j:int) i+j ] count;
Result   : 5

Operator : use2
Number   : 3
Signature: ((stream X) Y (map X Y Z)) -> (stream Z)
Example  : query intstream(1,5) 3 use2[ fun(i:int, j:int) i+j ] count;
Result   : 5

Operator : use2
Number   : 4
Signature: ((stream X) Y (map X Y stream(Z)) ) -> (stream Z)
Example  : query intstream(1,5) 2 use2[ fun(i:int, j:int) intstream(i,j) ] count;
Result   : 3

Operator : use2
Number   : 5
Signature: (X (stream Y) (map X Y Z) ) -> (stream Z)
Example  : query intstream(1,5) intstream(1,5) use2[ fun(i:int, j:int) i+j ] count;
Result   : 25

Operator : use2
Number   : 6
Signature: ((stream X) (stream Y) (map X Y (stream Z))) -> (stream Z)
Example  : query intstream(1,2) intstream(1,3) use2[ fun(i:int, j:int) intstream(i,j) ] count;
Result   : 9


Operator : use
Number   : 1
Signature: ((stream X) (map X Y)) -> (stream Y)
Example  : query intstream(1,5) use[ fun(i:int) i*i ] count;
Result   : 5

Operator : use
Number   : 2
Signature: ((stream X) (map X (stream Y))) -> (stream Y)
Example  : query intstream(1,5) use[ fun(i:int) intstream(i,5) ] count;
Result   : 15

Operator : use
Number   : 3
Signature: ((stream tuple(X)) (map tuple(X) Y)) -> (stream Y)
Example  : query intstream(1,5) transformstream use[ fun(i:TUPLE) (attr(i,Elem) + 5) ] count;
Result   : 5

Operator : use
Number   : 4
Signature: ((stream tuple(X)) (map tuple(X) (stream Y))) -> (stream Y)
Example  : query intstream(1,5) transformstream use[ fun(i:TUPLE) intstream(attr(i,Elem),5) ] count;
Result   : 15



Operator : ensure
Number   : 1
Signature: stream(T) -> bool
Example  : query intstream(1,5) ensure[5];
Result   : TRUE

Operator : ensure
Number   : 3
Signature: stream(tuple(T))) -> bool
Example  : query intstream(1,5) transformstream ensure[5];
Result   : TRUE

Operator : ensure
Number   : 2
Signature: stream(T) -> bool
Example  : query intstream(1,5) ensure[6];
Result   : FALSE


Operator : realstream
Number   : 1
Signature: real x real x real -> stream(real)
Example  : query realstream(0.0, 1.000001, 0.1) count
Result   : 11


Operator : intstream
Number   : 1
Signature: (int int) -> (stream int)
Example  : query intstream (1, 335) countintstream
Result   : 335


Operator : tail
Number   : 1
Signature: stream(tuple X) [x bool] -> stream(tuple X)
Example  : query plz feed tail[10, FALSE] extract[Ort]
Result   : "Koerner"

Operator : tail
Number   : 2
Signature: stream(tuple X) [x bool] -> stream(tuple X)
Example  : query plz feed tail[10, TRUE] extract[Ort]
Result   : "Marolterode"

Operator : tail
Number   : 3
Signature: stream(tuple X) [x bool] -> stream(tuple X)
Example  : query plz feed tail[100] count
Result   : 100

Operator : tail
Number   : 4
Signature: stream(T) [x bool] -> stream(T), T in DATA
Example  : query intstream(1,100) tail[10, FALSE] transformstream extract[Elem]
Result   : 100

Operator : tail
Number   : 5
Signature: stream(T) [x bool] -> stream(T), T in DATA
Example  : query intstream(1,100) tail[10, TRUE] transformstream extract[Elem]
Result   : 91

Operator : tail
Number   : 6
Signature: stream(T) [x bool] -> stream(T), T in DATA
Example  : query realstream(1.0,1050000.0,1.0) tail[666] count
Result   : 666


Operator : kinds
Number   : 1
Signature: string -> stream(string)
Example  : query "int" kinds count >= 5
Result   : TRUE


Operator : timeout
Number   : 1
Signature: stream(X) x real -> stream(X)
Example  : query ten feed timeout[10.0] count
Result   : 10


Operator : isOrdered
Number   : 1
Signature: stream(DATA)  -> bool
Example  : query intstream(10,1000) isOrdered
Result   : TRUE


Operator : intstream2
Number   : 1
Signature: int x int -> stream<int>
Example  : query intstream2(1,10)  count
Result   : 10
