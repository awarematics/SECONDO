Database : suffixtreetest 
Restore  : YES

Operator : createsuffixtree
Number   : 1
Signature: text -> suffixtree
Example  : query createsuffixtree ('babac');
Result   : (suffixtree (((5 5 ())(1 1 (( 2 5 ())(4 5 ())))(0 1 (( 2 5 ())(4 5 ())))(4 5 ())) 'babac'))

Operator : createsuffixtree_quadratic
Number   : 1
Signature: text -> suffixtree
Example  : query createsuffixtree_quadratic ('babac');
Result   : (suffixtree (((5 5 ())(1 1 (( 2 5 ())(4 5 ())))(0 1 (( 2 5 ())(4 5 ())))(4 5 ())) 'babac'))

Operator : patternoccurs
Number   : 1
Signature: suffixtree x text -> bool
Example  : query s1 patternoccurs 'text';
Result   : FALSE

Operator : patternpositions
Number   : 1
Signature: suffixtree x text -> stream(int)
Example  : query patternpositions(s1, 'text') count;
Result   : 0

Operator : patterncount
Number   : 1
Signature: (suffixtree text) -> int
Example  : query s1 patterncount 'text';
Result   : 0

Operator : longestrepeatedsubstring
Number   : 1
Signature: suffixtree -> stream(text)
Example  : query longestrepeatedsubstring(s1) count;
Result   : 1

Operator : shortestuniquesubstring
Number   : 1
Signature: suffixtree -> stream (text)
Example  : query shortestuniquesubstring(s1) printstream transformstream count;
Result   : 1

Operator : longestcommonsubstring
Number   : 1
Signature: text x text -> stream (text)
Example  : query longestcommonsubstring('text', 'text') count;
Result   : 1

Operator : maximaluniquematches
Number   : 1
Signature: text x text -> stream (text)
Example  : query maximaluniquematches ('test', 'test') count;
Result   : 1

Operator : circularstringlinearization
Number   : 1
Signature: text -> stream(tuple(linstr: text, pos: int))
Example  : query circularstringlinearization( 'text' ) count;
Result   : 1

Operator : kmismatch
Number   : 1
Signature: suffixtree x text x int -> stream(text)
Example  : query kmismatch(s1, 'text', 1) transformstream count;
Result   : 0

Operator : =
Number   : 1
Signature: suffixtree x suffixtree -> bool
Example  : query s1 = s1
Result   : TRUE


Operator : patternFilter 
Number   : 1
Signature: stream(text) x suffixtree -> stream(text)
Example  : query tokenize('aa bb'," ") patternFilter[ createsuffixtree('abcdbbabb')] count
Result   : 1


Operator : patternFilter 
Number   : 2 
Signature: stream(text) x text -> stream(text)
Example  : query tokenize('aa bb'," ") patternFilter[ 'abcdbbabb'] count
Result   : 1


Operator : patternFilter 
Number   : 3 
Signature: stream(text) x string -> stream(text)
Example  : query tokenize('aa bb'," ") patternFilter[ "abcdbbabb"] count
Result   : 1


Operator : patternFilter 
Number   : 4
Signature: stream(tuple) x attrname x suffixtree -> stream(tuple)
Example  : query tokenize('aa bb'," ") namedtransformstream[T] patternFilter[T, createsuffixtree('abcdbbabb')] count
Result   : 1


Operator : patternFilter 
Number   : 5 
Signature: stream(tuple) x attrname x text -> stream(tuple)
Example  : query tokenize('aa bb'," ") namedtransformstream[T] patternFilter[T, 'abcdbbabb'] count
Result   : 1


Operator : patternFilter 
Number   : 6 
Signature: stream(tuple) x attrname x string -> stream(tuple)
Example  : query tokenize('aa bb'," ") namedtransformstream[T] patternFilter[T, "abcdbbabb"] count
Result   : 1


