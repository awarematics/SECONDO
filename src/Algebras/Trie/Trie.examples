Database: berlintest
Restore : No



Operator : createInvFile
Number   : 1
Signature: stream(tuple) x a_i x a_j -> invfile ; a_i : text, a_j : tid
Example  : query SEC2OPERATORINFO feed addid createInvFile[Signature, TID] 
Result   : unpredictable
Remark   : A InvFile has not out function


Operator : createInvFile
Number   : 2
Signature: stream(tuple) x a_i x a_j x bool x int x text-> invfile ; a_i : text, a_j : tid
Example  : query SEC2OPERATORINFO feed addid createInvFile[Signature, TID, TRUE, 3, 'the a'] 
Result   : unpredictable
Remark   : A InvFile has not out function

Operator : searchWord 
Number   : 1
Signature: invfile x string -> stream(tuple((TID tid)(WordPos int)(CharPos pos)))
Example  : query strassen feed addid extend[Te : totext(.Name)]  createInvFile[Te, TID]  searchWord["Theaterufer"] count > 0
Result   : TRUE


Operator : searchPrefix
Number   : 1
Signature: invfile x string -> stream(tuple((TID tid)(WordPos int)(CharPos pos)))
Example  : query strassen feed addid extend[Te : totext(.Name)]  createInvFile[Te, TID]  searchPrefix["The"] count > 0
Result   : TRUE

Operator  : getFileInfo 
Number    : 1
Signature : invfile -> text
Example   : query length(getFileInfo(SEC2OPERATORINFO feed addid createInvFile[Signature, TID] )) > 0
Result   : TRUE


Operator  : wordCount
Number    : 1
Signature : invfile -> int
Example   : query tokenize('hello hello hello'," ") namedtransformstream[T] extend[I : int2tid(1)] createInvFile[T,I] wordCount["hello"]
Result    : 3 


Operator  : prefixCount
Number    : 1
Signature : invfile x string -> int
Example   : query tokenize('hello hello hello', " ") namedtransformstream[T] extend[I : int2tid(1)] createInvFile[T,I] prefixCount["hel"] tconsume
Result    : ( (trel(tuple((Word text)(Count int)))) ( ('hello' 3))) 


Operator  : defaultInvFileFileSeparators
Number    : 1
Signature : -> string
Example   : query defaultInvFileSeparators() contains " "
Result    : TRUE

Operator  : getSeparators
Number    : 1
Signature : invfile -> string
Example   :  query getSeparators('test' feed transformstream extend[I : int2tid(1)] createInvFile[Elem,I,FALSE,2,'',"@"]) = "@"
Result    : TRUE



