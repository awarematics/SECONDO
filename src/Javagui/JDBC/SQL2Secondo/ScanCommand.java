package SQL2Secondo;
import java_cup10.runtime.*;
import java.io.IOException;
import SecExceptions.*;
import SQL2Secondo.ParsCommandSym;
import static SQL2Secondo.ParsCommandSym.*;


class ScanCommand implements java_cup.runtime.Scanner {
	private final int YY_BUFFER_SIZE = 512;
	private final int YY_F = -1;
	private final int YY_NO_STATE = -1;
	private final int YY_NOT_ACCEPT = 0;
	private final int YY_START = 1;
	private final int YY_END = 2;
	private final int YY_NO_ANCHOR = 4;
	private final int YY_BOL = 65536;
	private final int YY_EOF = 65537;

	StringBuffer string = new StringBuffer();
	private Symbol sym(int type) {
		return sym(type, yytext());
	}
	private Symbol sym(int type, Object value) {
		return new Symbol(type, yyline, yycolumn, value);
	}
	/* Detected SQL keywords which are not supported by Secondo raise this exception*/
	private void notCompError(String message) throws IOException {
		throw new NotSuppException(message);
	}
	private void error()
	throws IOException
	{
		throw new IOException("illegal text at line = "+yyline+", column = "+yycolumn+", text = '"+yytext()+"'");
	}
	private java.io.BufferedReader yy_reader;
	private int yy_buffer_index;
	private int yy_buffer_read;
	private int yy_buffer_start;
	private int yy_buffer_end;
	private char yy_buffer[];
	private int yyline;
	private boolean yy_at_bol;
	private int yy_lexical_state;

	ScanCommand (java.io.Reader reader) {
		this ();
		if (null == reader) {
			throw (new Error("Error: Bad input stream initializer."));
		}
		yy_reader = new java.io.BufferedReader(reader);
	}

	ScanCommand (java.io.InputStream instream) {
		this ();
		if (null == instream) {
			throw (new Error("Error: Bad input stream initializer."));
		}
		yy_reader = new java.io.BufferedReader(new java.io.InputStreamReader(instream));
	}

	private ScanCommand () {
		yy_buffer = new char[YY_BUFFER_SIZE];
		yy_buffer_read = 0;
		yy_buffer_index = 0;
		yy_buffer_start = 0;
		yy_buffer_end = 0;
		yyline = 0;
		yy_at_bol = true;
		yy_lexical_state = YYINITIAL;

	// TODO: code that goes to constructor
	}

	private boolean yy_eof_done = false;
	private final int STRING = 1;
	private final int YYINITIAL = 0;
	private final int yy_state_dtrans[] = {
		0,
		268
	};
	private void yybegin (int state) {
		yy_lexical_state = state;
	}
	private int yy_advance ()
		throws java.io.IOException {
		int next_read;
		int i;
		int j;

		if (yy_buffer_index < yy_buffer_read) {
			return yy_buffer[yy_buffer_index++];
		}

		if (0 != yy_buffer_start) {
			i = yy_buffer_start;
			j = 0;
			while (i < yy_buffer_read) {
				yy_buffer[j] = yy_buffer[i];
				++i;
				++j;
			}
			yy_buffer_end = yy_buffer_end - yy_buffer_start;
			yy_buffer_start = 0;
			yy_buffer_read = j;
			yy_buffer_index = j;
			next_read = yy_reader.read(yy_buffer,
					yy_buffer_read,
					yy_buffer.length - yy_buffer_read);
			if (-1 == next_read) {
				return YY_EOF;
			}
			yy_buffer_read = yy_buffer_read + next_read;
		}

		while (yy_buffer_index >= yy_buffer_read) {
			if (yy_buffer_index >= yy_buffer.length) {
				yy_buffer = yy_double(yy_buffer);
			}
			next_read = yy_reader.read(yy_buffer,
					yy_buffer_read,
					yy_buffer.length - yy_buffer_read);
			if (-1 == next_read) {
				return YY_EOF;
			}
			yy_buffer_read = yy_buffer_read + next_read;
		}
		return yy_buffer[yy_buffer_index++];
	}
	private void yy_move_end () {
		if (yy_buffer_end > yy_buffer_start &&
		    '\n' == yy_buffer[yy_buffer_end-1])
			yy_buffer_end--;
		if (yy_buffer_end > yy_buffer_start &&
		    '\r' == yy_buffer[yy_buffer_end-1])
			yy_buffer_end--;
	}
	private boolean yy_last_was_cr=false;
	private void yy_mark_start () {
		int i;
		for (i = yy_buffer_start; i < yy_buffer_index; ++i) {
			if ('\n' == yy_buffer[i] && !yy_last_was_cr) {
				++yyline;
			}
			if ('\r' == yy_buffer[i]) {
				++yyline;
				yy_last_was_cr=true;
			} else yy_last_was_cr=false;
		}
		yy_buffer_start = yy_buffer_index;
	}
	private void yy_mark_end () {
		yy_buffer_end = yy_buffer_index;
	}
	private void yy_to_mark () {
		yy_buffer_index = yy_buffer_end;
		yy_at_bol = (yy_buffer_end > yy_buffer_start) &&
		            ('\r' == yy_buffer[yy_buffer_end-1] ||
		             '\n' == yy_buffer[yy_buffer_end-1] ||
		             2028/*LS*/ == yy_buffer[yy_buffer_end-1] ||
		             2029/*PS*/ == yy_buffer[yy_buffer_end-1]);
	}
	private java.lang.String yytext () {
		return (new java.lang.String(yy_buffer,
			yy_buffer_start,
			yy_buffer_end - yy_buffer_start));
	}
	private int yylength () {
		return yy_buffer_end - yy_buffer_start;
	}
	private char[] yy_double (char buf[]) {
		int i;
		char newbuf[];
		newbuf = new char[2*buf.length];
		for (i = 0; i < buf.length; ++i) {
			newbuf[i] = buf[i];
		}
		return newbuf;
	}
	private final int YY_E_INTERNAL = 0;
	private final int YY_E_MATCH = 1;
	private java.lang.String yy_error_string[] = {
		"Error: Internal error.\n",
		"Error: Unmatched input.\n"
	};
	private void yy_error (int code,boolean fatal) {
		java.lang.System.out.print(yy_error_string[code]);
		java.lang.System.out.flush();
		if (fatal) {
			throw new Error("Fatal Error.\n");
		}
	}
	private int[][] unpackFromString(int size1, int size2, String st) {
		int colonIndex = -1;
		String lengthString;
		int sequenceLength = 0;
		int sequenceInteger = 0;

		int commaIndex;
		String workString;

		int res[][] = new int[size1][size2];
		for (int i= 0; i < size1; i++) {
			for (int j= 0; j < size2; j++) {
				if (sequenceLength != 0) {
					res[i][j] = sequenceInteger;
					sequenceLength--;
					continue;
				}
				commaIndex = st.indexOf(',');
				workString = (commaIndex==-1) ? st :
					st.substring(0, commaIndex);
				st = st.substring(commaIndex+1);
				colonIndex = workString.indexOf(':');
				if (colonIndex == -1) {
					res[i][j]=Integer.parseInt(workString);
					continue;
				}
				lengthString =
					workString.substring(colonIndex+1);
				sequenceLength=Integer.parseInt(lengthString);
				workString=workString.substring(0,colonIndex);
				sequenceInteger=Integer.parseInt(workString);
				res[i][j] = sequenceInteger;
				sequenceLength--;
			}
		}
		return res;
	}
	private int yy_acpt[] = {
		/* 0 */ YY_NOT_ACCEPT,
		/* 1 */ YY_NO_ANCHOR,
		/* 2 */ YY_NO_ANCHOR,
		/* 3 */ YY_NO_ANCHOR,
		/* 4 */ YY_NO_ANCHOR,
		/* 5 */ YY_NO_ANCHOR,
		/* 6 */ YY_NO_ANCHOR,
		/* 7 */ YY_NO_ANCHOR,
		/* 8 */ YY_NO_ANCHOR,
		/* 9 */ YY_NO_ANCHOR,
		/* 10 */ YY_NO_ANCHOR,
		/* 11 */ YY_NO_ANCHOR,
		/* 12 */ YY_NO_ANCHOR,
		/* 13 */ YY_NO_ANCHOR,
		/* 14 */ YY_NO_ANCHOR,
		/* 15 */ YY_NO_ANCHOR,
		/* 16 */ YY_NO_ANCHOR,
		/* 17 */ YY_NO_ANCHOR,
		/* 18 */ YY_NO_ANCHOR,
		/* 19 */ YY_NO_ANCHOR,
		/* 20 */ YY_NO_ANCHOR,
		/* 21 */ YY_NO_ANCHOR,
		/* 22 */ YY_NO_ANCHOR,
		/* 23 */ YY_NO_ANCHOR,
		/* 24 */ YY_NO_ANCHOR,
		/* 25 */ YY_NO_ANCHOR,
		/* 26 */ YY_NO_ANCHOR,
		/* 27 */ YY_NO_ANCHOR,
		/* 28 */ YY_NO_ANCHOR,
		/* 29 */ YY_NO_ANCHOR,
		/* 30 */ YY_NO_ANCHOR,
		/* 31 */ YY_NO_ANCHOR,
		/* 32 */ YY_NO_ANCHOR,
		/* 33 */ YY_NO_ANCHOR,
		/* 34 */ YY_NO_ANCHOR,
		/* 35 */ YY_NO_ANCHOR,
		/* 36 */ YY_NO_ANCHOR,
		/* 37 */ YY_NO_ANCHOR,
		/* 38 */ YY_NO_ANCHOR,
		/* 39 */ YY_NO_ANCHOR,
		/* 40 */ YY_NO_ANCHOR,
		/* 41 */ YY_NO_ANCHOR,
		/* 42 */ YY_NO_ANCHOR,
		/* 43 */ YY_NO_ANCHOR,
		/* 44 */ YY_NO_ANCHOR,
		/* 45 */ YY_NO_ANCHOR,
		/* 46 */ YY_NO_ANCHOR,
		/* 47 */ YY_NO_ANCHOR,
		/* 48 */ YY_NO_ANCHOR,
		/* 49 */ YY_NO_ANCHOR,
		/* 50 */ YY_NO_ANCHOR,
		/* 51 */ YY_NO_ANCHOR,
		/* 52 */ YY_NO_ANCHOR,
		/* 53 */ YY_NO_ANCHOR,
		/* 54 */ YY_NO_ANCHOR,
		/* 55 */ YY_NO_ANCHOR,
		/* 56 */ YY_NO_ANCHOR,
		/* 57 */ YY_NO_ANCHOR,
		/* 58 */ YY_NO_ANCHOR,
		/* 59 */ YY_NO_ANCHOR,
		/* 60 */ YY_NO_ANCHOR,
		/* 61 */ YY_NO_ANCHOR,
		/* 62 */ YY_NO_ANCHOR,
		/* 63 */ YY_NO_ANCHOR,
		/* 64 */ YY_NO_ANCHOR,
		/* 65 */ YY_NO_ANCHOR,
		/* 66 */ YY_NO_ANCHOR,
		/* 67 */ YY_NO_ANCHOR,
		/* 68 */ YY_NO_ANCHOR,
		/* 69 */ YY_NO_ANCHOR,
		/* 70 */ YY_NO_ANCHOR,
		/* 71 */ YY_NO_ANCHOR,
		/* 72 */ YY_NO_ANCHOR,
		/* 73 */ YY_NO_ANCHOR,
		/* 74 */ YY_NO_ANCHOR,
		/* 75 */ YY_NO_ANCHOR,
		/* 76 */ YY_NO_ANCHOR,
		/* 77 */ YY_NO_ANCHOR,
		/* 78 */ YY_NO_ANCHOR,
		/* 79 */ YY_NO_ANCHOR,
		/* 80 */ YY_NO_ANCHOR,
		/* 81 */ YY_NO_ANCHOR,
		/* 82 */ YY_NO_ANCHOR,
		/* 83 */ YY_NO_ANCHOR,
		/* 84 */ YY_NO_ANCHOR,
		/* 85 */ YY_NO_ANCHOR,
		/* 86 */ YY_NO_ANCHOR,
		/* 87 */ YY_NO_ANCHOR,
		/* 88 */ YY_NO_ANCHOR,
		/* 89 */ YY_NO_ANCHOR,
		/* 90 */ YY_NO_ANCHOR,
		/* 91 */ YY_NO_ANCHOR,
		/* 92 */ YY_NO_ANCHOR,
		/* 93 */ YY_NO_ANCHOR,
		/* 94 */ YY_NO_ANCHOR,
		/* 95 */ YY_NO_ANCHOR,
		/* 96 */ YY_NO_ANCHOR,
		/* 97 */ YY_NO_ANCHOR,
		/* 98 */ YY_NO_ANCHOR,
		/* 99 */ YY_NO_ANCHOR,
		/* 100 */ YY_NO_ANCHOR,
		/* 101 */ YY_NO_ANCHOR,
		/* 102 */ YY_NO_ANCHOR,
		/* 103 */ YY_NO_ANCHOR,
		/* 104 */ YY_NO_ANCHOR,
		/* 105 */ YY_NO_ANCHOR,
		/* 106 */ YY_NO_ANCHOR,
		/* 107 */ YY_NO_ANCHOR,
		/* 108 */ YY_NO_ANCHOR,
		/* 109 */ YY_NO_ANCHOR,
		/* 110 */ YY_NO_ANCHOR,
		/* 111 */ YY_NO_ANCHOR,
		/* 112 */ YY_NO_ANCHOR,
		/* 113 */ YY_NO_ANCHOR,
		/* 114 */ YY_NOT_ACCEPT,
		/* 115 */ YY_NO_ANCHOR,
		/* 116 */ YY_NO_ANCHOR,
		/* 117 */ YY_NO_ANCHOR,
		/* 118 */ YY_NO_ANCHOR,
		/* 119 */ YY_NO_ANCHOR,
		/* 120 */ YY_NO_ANCHOR,
		/* 121 */ YY_NO_ANCHOR,
		/* 122 */ YY_NO_ANCHOR,
		/* 123 */ YY_NOT_ACCEPT,
		/* 124 */ YY_NO_ANCHOR,
		/* 125 */ YY_NO_ANCHOR,
		/* 126 */ YY_NOT_ACCEPT,
		/* 127 */ YY_NO_ANCHOR,
		/* 128 */ YY_NOT_ACCEPT,
		/* 129 */ YY_NO_ANCHOR,
		/* 130 */ YY_NOT_ACCEPT,
		/* 131 */ YY_NO_ANCHOR,
		/* 132 */ YY_NOT_ACCEPT,
		/* 133 */ YY_NO_ANCHOR,
		/* 134 */ YY_NOT_ACCEPT,
		/* 135 */ YY_NO_ANCHOR,
		/* 136 */ YY_NOT_ACCEPT,
		/* 137 */ YY_NO_ANCHOR,
		/* 138 */ YY_NOT_ACCEPT,
		/* 139 */ YY_NO_ANCHOR,
		/* 140 */ YY_NOT_ACCEPT,
		/* 141 */ YY_NO_ANCHOR,
		/* 142 */ YY_NOT_ACCEPT,
		/* 143 */ YY_NO_ANCHOR,
		/* 144 */ YY_NOT_ACCEPT,
		/* 145 */ YY_NO_ANCHOR,
		/* 146 */ YY_NOT_ACCEPT,
		/* 147 */ YY_NO_ANCHOR,
		/* 148 */ YY_NOT_ACCEPT,
		/* 149 */ YY_NO_ANCHOR,
		/* 150 */ YY_NOT_ACCEPT,
		/* 151 */ YY_NO_ANCHOR,
		/* 152 */ YY_NOT_ACCEPT,
		/* 153 */ YY_NO_ANCHOR,
		/* 154 */ YY_NOT_ACCEPT,
		/* 155 */ YY_NO_ANCHOR,
		/* 156 */ YY_NOT_ACCEPT,
		/* 157 */ YY_NO_ANCHOR,
		/* 158 */ YY_NOT_ACCEPT,
		/* 159 */ YY_NO_ANCHOR,
		/* 160 */ YY_NOT_ACCEPT,
		/* 161 */ YY_NO_ANCHOR,
		/* 162 */ YY_NOT_ACCEPT,
		/* 163 */ YY_NO_ANCHOR,
		/* 164 */ YY_NOT_ACCEPT,
		/* 165 */ YY_NO_ANCHOR,
		/* 166 */ YY_NOT_ACCEPT,
		/* 167 */ YY_NO_ANCHOR,
		/* 168 */ YY_NOT_ACCEPT,
		/* 169 */ YY_NO_ANCHOR,
		/* 170 */ YY_NOT_ACCEPT,
		/* 171 */ YY_NO_ANCHOR,
		/* 172 */ YY_NOT_ACCEPT,
		/* 173 */ YY_NO_ANCHOR,
		/* 174 */ YY_NOT_ACCEPT,
		/* 175 */ YY_NO_ANCHOR,
		/* 176 */ YY_NOT_ACCEPT,
		/* 177 */ YY_NO_ANCHOR,
		/* 178 */ YY_NOT_ACCEPT,
		/* 179 */ YY_NO_ANCHOR,
		/* 180 */ YY_NOT_ACCEPT,
		/* 181 */ YY_NO_ANCHOR,
		/* 182 */ YY_NOT_ACCEPT,
		/* 183 */ YY_NO_ANCHOR,
		/* 184 */ YY_NOT_ACCEPT,
		/* 185 */ YY_NO_ANCHOR,
		/* 186 */ YY_NOT_ACCEPT,
		/* 187 */ YY_NO_ANCHOR,
		/* 188 */ YY_NOT_ACCEPT,
		/* 189 */ YY_NO_ANCHOR,
		/* 190 */ YY_NOT_ACCEPT,
		/* 191 */ YY_NO_ANCHOR,
		/* 192 */ YY_NOT_ACCEPT,
		/* 193 */ YY_NO_ANCHOR,
		/* 194 */ YY_NOT_ACCEPT,
		/* 195 */ YY_NO_ANCHOR,
		/* 196 */ YY_NOT_ACCEPT,
		/* 197 */ YY_NO_ANCHOR,
		/* 198 */ YY_NOT_ACCEPT,
		/* 199 */ YY_NO_ANCHOR,
		/* 200 */ YY_NOT_ACCEPT,
		/* 201 */ YY_NO_ANCHOR,
		/* 202 */ YY_NOT_ACCEPT,
		/* 203 */ YY_NO_ANCHOR,
		/* 204 */ YY_NOT_ACCEPT,
		/* 205 */ YY_NO_ANCHOR,
		/* 206 */ YY_NOT_ACCEPT,
		/* 207 */ YY_NO_ANCHOR,
		/* 208 */ YY_NOT_ACCEPT,
		/* 209 */ YY_NO_ANCHOR,
		/* 210 */ YY_NOT_ACCEPT,
		/* 211 */ YY_NO_ANCHOR,
		/* 212 */ YY_NOT_ACCEPT,
		/* 213 */ YY_NO_ANCHOR,
		/* 214 */ YY_NOT_ACCEPT,
		/* 215 */ YY_NO_ANCHOR,
		/* 216 */ YY_NOT_ACCEPT,
		/* 217 */ YY_NO_ANCHOR,
		/* 218 */ YY_NOT_ACCEPT,
		/* 219 */ YY_NO_ANCHOR,
		/* 220 */ YY_NOT_ACCEPT,
		/* 221 */ YY_NO_ANCHOR,
		/* 222 */ YY_NOT_ACCEPT,
		/* 223 */ YY_NO_ANCHOR,
		/* 224 */ YY_NOT_ACCEPT,
		/* 225 */ YY_NO_ANCHOR,
		/* 226 */ YY_NOT_ACCEPT,
		/* 227 */ YY_NO_ANCHOR,
		/* 228 */ YY_NOT_ACCEPT,
		/* 229 */ YY_NO_ANCHOR,
		/* 230 */ YY_NOT_ACCEPT,
		/* 231 */ YY_NO_ANCHOR,
		/* 232 */ YY_NOT_ACCEPT,
		/* 233 */ YY_NO_ANCHOR,
		/* 234 */ YY_NOT_ACCEPT,
		/* 235 */ YY_NO_ANCHOR,
		/* 236 */ YY_NOT_ACCEPT,
		/* 237 */ YY_NO_ANCHOR,
		/* 238 */ YY_NOT_ACCEPT,
		/* 239 */ YY_NO_ANCHOR,
		/* 240 */ YY_NOT_ACCEPT,
		/* 241 */ YY_NO_ANCHOR,
		/* 242 */ YY_NOT_ACCEPT,
		/* 243 */ YY_NO_ANCHOR,
		/* 244 */ YY_NOT_ACCEPT,
		/* 245 */ YY_NO_ANCHOR,
		/* 246 */ YY_NOT_ACCEPT,
		/* 247 */ YY_NO_ANCHOR,
		/* 248 */ YY_NOT_ACCEPT,
		/* 249 */ YY_NO_ANCHOR,
		/* 250 */ YY_NOT_ACCEPT,
		/* 251 */ YY_NO_ANCHOR,
		/* 252 */ YY_NOT_ACCEPT,
		/* 253 */ YY_NO_ANCHOR,
		/* 254 */ YY_NOT_ACCEPT,
		/* 255 */ YY_NO_ANCHOR,
		/* 256 */ YY_NOT_ACCEPT,
		/* 257 */ YY_NO_ANCHOR,
		/* 258 */ YY_NOT_ACCEPT,
		/* 259 */ YY_NO_ANCHOR,
		/* 260 */ YY_NOT_ACCEPT,
		/* 261 */ YY_NO_ANCHOR,
		/* 262 */ YY_NOT_ACCEPT,
		/* 263 */ YY_NO_ANCHOR,
		/* 264 */ YY_NOT_ACCEPT,
		/* 265 */ YY_NO_ANCHOR,
		/* 266 */ YY_NOT_ACCEPT,
		/* 267 */ YY_NO_ANCHOR,
		/* 268 */ YY_NOT_ACCEPT,
		/* 269 */ YY_NO_ANCHOR,
		/* 270 */ YY_NO_ANCHOR,
		/* 271 */ YY_NO_ANCHOR,
		/* 272 */ YY_NO_ANCHOR,
		/* 273 */ YY_NO_ANCHOR,
		/* 274 */ YY_NOT_ACCEPT,
		/* 275 */ YY_NOT_ACCEPT,
		/* 276 */ YY_NOT_ACCEPT,
		/* 277 */ YY_NOT_ACCEPT,
		/* 278 */ YY_NO_ANCHOR,
		/* 279 */ YY_NOT_ACCEPT,
		/* 280 */ YY_NOT_ACCEPT,
		/* 281 */ YY_NOT_ACCEPT,
		/* 282 */ YY_NOT_ACCEPT,
		/* 283 */ YY_NO_ANCHOR,
		/* 284 */ YY_NOT_ACCEPT,
		/* 285 */ YY_NOT_ACCEPT,
		/* 286 */ YY_NO_ANCHOR,
		/* 287 */ YY_NOT_ACCEPT,
		/* 288 */ YY_NOT_ACCEPT,
		/* 289 */ YY_NO_ANCHOR,
		/* 290 */ YY_NOT_ACCEPT,
		/* 291 */ YY_NOT_ACCEPT,
		/* 292 */ YY_NO_ANCHOR,
		/* 293 */ YY_NOT_ACCEPT,
		/* 294 */ YY_NO_ANCHOR,
		/* 295 */ YY_NOT_ACCEPT,
		/* 296 */ YY_NO_ANCHOR,
		/* 297 */ YY_NOT_ACCEPT,
		/* 298 */ YY_NO_ANCHOR,
		/* 299 */ YY_NOT_ACCEPT,
		/* 300 */ YY_NO_ANCHOR,
		/* 301 */ YY_NO_ANCHOR,
		/* 302 */ YY_NO_ANCHOR,
		/* 303 */ YY_NO_ANCHOR,
		/* 304 */ YY_NO_ANCHOR,
		/* 305 */ YY_NO_ANCHOR,
		/* 306 */ YY_NO_ANCHOR,
		/* 307 */ YY_NO_ANCHOR,
		/* 308 */ YY_NO_ANCHOR,
		/* 309 */ YY_NO_ANCHOR,
		/* 310 */ YY_NO_ANCHOR,
		/* 311 */ YY_NO_ANCHOR,
		/* 312 */ YY_NO_ANCHOR,
		/* 313 */ YY_NO_ANCHOR,
		/* 314 */ YY_NO_ANCHOR,
		/* 315 */ YY_NO_ANCHOR,
		/* 316 */ YY_NO_ANCHOR,
		/* 317 */ YY_NO_ANCHOR,
		/* 318 */ YY_NO_ANCHOR,
		/* 319 */ YY_NO_ANCHOR,
		/* 320 */ YY_NO_ANCHOR,
		/* 321 */ YY_NO_ANCHOR,
		/* 322 */ YY_NO_ANCHOR,
		/* 323 */ YY_NO_ANCHOR,
		/* 324 */ YY_NO_ANCHOR,
		/* 325 */ YY_NO_ANCHOR,
		/* 326 */ YY_NO_ANCHOR,
		/* 327 */ YY_NO_ANCHOR,
		/* 328 */ YY_NO_ANCHOR,
		/* 329 */ YY_NO_ANCHOR,
		/* 330 */ YY_NO_ANCHOR,
		/* 331 */ YY_NO_ANCHOR,
		/* 332 */ YY_NO_ANCHOR,
		/* 333 */ YY_NO_ANCHOR,
		/* 334 */ YY_NO_ANCHOR,
		/* 335 */ YY_NO_ANCHOR,
		/* 336 */ YY_NO_ANCHOR,
		/* 337 */ YY_NO_ANCHOR,
		/* 338 */ YY_NO_ANCHOR,
		/* 339 */ YY_NO_ANCHOR,
		/* 340 */ YY_NO_ANCHOR,
		/* 341 */ YY_NO_ANCHOR,
		/* 342 */ YY_NO_ANCHOR,
		/* 343 */ YY_NO_ANCHOR,
		/* 344 */ YY_NO_ANCHOR,
		/* 345 */ YY_NO_ANCHOR,
		/* 346 */ YY_NO_ANCHOR,
		/* 347 */ YY_NO_ANCHOR,
		/* 348 */ YY_NO_ANCHOR,
		/* 349 */ YY_NO_ANCHOR,
		/* 350 */ YY_NO_ANCHOR,
		/* 351 */ YY_NO_ANCHOR,
		/* 352 */ YY_NO_ANCHOR,
		/* 353 */ YY_NO_ANCHOR,
		/* 354 */ YY_NO_ANCHOR,
		/* 355 */ YY_NO_ANCHOR,
		/* 356 */ YY_NO_ANCHOR,
		/* 357 */ YY_NO_ANCHOR,
		/* 358 */ YY_NO_ANCHOR,
		/* 359 */ YY_NO_ANCHOR,
		/* 360 */ YY_NO_ANCHOR,
		/* 361 */ YY_NO_ANCHOR,
		/* 362 */ YY_NO_ANCHOR,
		/* 363 */ YY_NO_ANCHOR,
		/* 364 */ YY_NOT_ACCEPT,
		/* 365 */ YY_NOT_ACCEPT,
		/* 366 */ YY_NOT_ACCEPT,
		/* 367 */ YY_NO_ANCHOR,
		/* 368 */ YY_NO_ANCHOR,
		/* 369 */ YY_NOT_ACCEPT,
		/* 370 */ YY_NO_ANCHOR,
		/* 371 */ YY_NO_ANCHOR,
		/* 372 */ YY_NO_ANCHOR,
		/* 373 */ YY_NO_ANCHOR,
		/* 374 */ YY_NO_ANCHOR,
		/* 375 */ YY_NO_ANCHOR,
		/* 376 */ YY_NO_ANCHOR,
		/* 377 */ YY_NO_ANCHOR,
		/* 378 */ YY_NO_ANCHOR,
		/* 379 */ YY_NO_ANCHOR,
		/* 380 */ YY_NO_ANCHOR,
		/* 381 */ YY_NO_ANCHOR,
		/* 382 */ YY_NO_ANCHOR,
		/* 383 */ YY_NO_ANCHOR,
		/* 384 */ YY_NO_ANCHOR,
		/* 385 */ YY_NO_ANCHOR,
		/* 386 */ YY_NO_ANCHOR,
		/* 387 */ YY_NO_ANCHOR,
		/* 388 */ YY_NO_ANCHOR,
		/* 389 */ YY_NO_ANCHOR,
		/* 390 */ YY_NO_ANCHOR,
		/* 391 */ YY_NO_ANCHOR,
		/* 392 */ YY_NO_ANCHOR,
		/* 393 */ YY_NO_ANCHOR,
		/* 394 */ YY_NO_ANCHOR,
		/* 395 */ YY_NO_ANCHOR,
		/* 396 */ YY_NO_ANCHOR,
		/* 397 */ YY_NO_ANCHOR,
		/* 398 */ YY_NO_ANCHOR,
		/* 399 */ YY_NO_ANCHOR,
		/* 400 */ YY_NO_ANCHOR,
		/* 401 */ YY_NO_ANCHOR,
		/* 402 */ YY_NO_ANCHOR,
		/* 403 */ YY_NO_ANCHOR,
		/* 404 */ YY_NO_ANCHOR,
		/* 405 */ YY_NO_ANCHOR,
		/* 406 */ YY_NO_ANCHOR,
		/* 407 */ YY_NO_ANCHOR,
		/* 408 */ YY_NO_ANCHOR,
		/* 409 */ YY_NO_ANCHOR,
		/* 410 */ YY_NO_ANCHOR,
		/* 411 */ YY_NO_ANCHOR,
		/* 412 */ YY_NO_ANCHOR,
		/* 413 */ YY_NO_ANCHOR,
		/* 414 */ YY_NO_ANCHOR,
		/* 415 */ YY_NO_ANCHOR,
		/* 416 */ YY_NO_ANCHOR,
		/* 417 */ YY_NO_ANCHOR,
		/* 418 */ YY_NO_ANCHOR,
		/* 419 */ YY_NO_ANCHOR,
		/* 420 */ YY_NO_ANCHOR,
		/* 421 */ YY_NO_ANCHOR,
		/* 422 */ YY_NO_ANCHOR,
		/* 423 */ YY_NO_ANCHOR,
		/* 424 */ YY_NO_ANCHOR,
		/* 425 */ YY_NOT_ACCEPT,
		/* 426 */ YY_NOT_ACCEPT,
		/* 427 */ YY_NOT_ACCEPT,
		/* 428 */ YY_NOT_ACCEPT,
		/* 429 */ YY_NO_ANCHOR,
		/* 430 */ YY_NO_ANCHOR,
		/* 431 */ YY_NO_ANCHOR,
		/* 432 */ YY_NO_ANCHOR,
		/* 433 */ YY_NO_ANCHOR,
		/* 434 */ YY_NO_ANCHOR,
		/* 435 */ YY_NO_ANCHOR,
		/* 436 */ YY_NO_ANCHOR,
		/* 437 */ YY_NO_ANCHOR,
		/* 438 */ YY_NO_ANCHOR,
		/* 439 */ YY_NO_ANCHOR,
		/* 440 */ YY_NO_ANCHOR,
		/* 441 */ YY_NO_ANCHOR,
		/* 442 */ YY_NO_ANCHOR,
		/* 443 */ YY_NO_ANCHOR,
		/* 444 */ YY_NO_ANCHOR,
		/* 445 */ YY_NO_ANCHOR,
		/* 446 */ YY_NO_ANCHOR,
		/* 447 */ YY_NO_ANCHOR,
		/* 448 */ YY_NO_ANCHOR,
		/* 449 */ YY_NO_ANCHOR,
		/* 450 */ YY_NO_ANCHOR,
		/* 451 */ YY_NO_ANCHOR,
		/* 452 */ YY_NO_ANCHOR,
		/* 453 */ YY_NO_ANCHOR,
		/* 454 */ YY_NO_ANCHOR,
		/* 455 */ YY_NO_ANCHOR,
		/* 456 */ YY_NO_ANCHOR,
		/* 457 */ YY_NO_ANCHOR,
		/* 458 */ YY_NO_ANCHOR,
		/* 459 */ YY_NO_ANCHOR,
		/* 460 */ YY_NO_ANCHOR,
		/* 461 */ YY_NO_ANCHOR,
		/* 462 */ YY_NO_ANCHOR,
		/* 463 */ YY_NO_ANCHOR,
		/* 464 */ YY_NO_ANCHOR,
		/* 465 */ YY_NO_ANCHOR,
		/* 466 */ YY_NO_ANCHOR,
		/* 467 */ YY_NO_ANCHOR,
		/* 468 */ YY_NO_ANCHOR,
		/* 469 */ YY_NO_ANCHOR,
		/* 470 */ YY_NO_ANCHOR,
		/* 471 */ YY_NO_ANCHOR,
		/* 472 */ YY_NO_ANCHOR,
		/* 473 */ YY_NO_ANCHOR,
		/* 474 */ YY_NO_ANCHOR,
		/* 475 */ YY_NO_ANCHOR,
		/* 476 */ YY_NO_ANCHOR,
		/* 477 */ YY_NO_ANCHOR,
		/* 478 */ YY_NO_ANCHOR,
		/* 479 */ YY_NO_ANCHOR,
		/* 480 */ YY_NO_ANCHOR,
		/* 481 */ YY_NO_ANCHOR,
		/* 482 */ YY_NO_ANCHOR,
		/* 483 */ YY_NO_ANCHOR,
		/* 484 */ YY_NO_ANCHOR,
		/* 485 */ YY_NO_ANCHOR,
		/* 486 */ YY_NO_ANCHOR,
		/* 487 */ YY_NO_ANCHOR,
		/* 488 */ YY_NO_ANCHOR,
		/* 489 */ YY_NO_ANCHOR,
		/* 490 */ YY_NO_ANCHOR,
		/* 491 */ YY_NO_ANCHOR,
		/* 492 */ YY_NO_ANCHOR,
		/* 493 */ YY_NO_ANCHOR,
		/* 494 */ YY_NO_ANCHOR,
		/* 495 */ YY_NO_ANCHOR,
		/* 496 */ YY_NO_ANCHOR,
		/* 497 */ YY_NO_ANCHOR,
		/* 498 */ YY_NO_ANCHOR,
		/* 499 */ YY_NO_ANCHOR,
		/* 500 */ YY_NO_ANCHOR,
		/* 501 */ YY_NO_ANCHOR,
		/* 502 */ YY_NO_ANCHOR,
		/* 503 */ YY_NO_ANCHOR,
		/* 504 */ YY_NO_ANCHOR,
		/* 505 */ YY_NO_ANCHOR,
		/* 506 */ YY_NO_ANCHOR,
		/* 507 */ YY_NO_ANCHOR,
		/* 508 */ YY_NO_ANCHOR,
		/* 509 */ YY_NO_ANCHOR,
		/* 510 */ YY_NO_ANCHOR,
		/* 511 */ YY_NO_ANCHOR,
		/* 512 */ YY_NO_ANCHOR,
		/* 513 */ YY_NO_ANCHOR
	};
	private int yy_cmap[] = unpackFromString(1,65538,
"47:10,2,47:2,1,47:18,24,47,49,47:4,29,34,35,39,38,36,31,37,40,30,45,44:8,32" +
",47,41,43,42,47:2,7,6,8,14,10,21,3,20,12,46,28,4,22,13,5,17,27,9,19,11,18,2" +
"6,23,15,16,33,47,48,47:2,25,47,7,6,8,14,10,21,3,20,12,46,28,4,22,13,5,17,27" +
",9,19,11,18,26,23,15,16,33,47:65413,0:2")[0];

	private int yy_rmap[] = unpackFromString(1,514,
"0,1,2,3,1,4,1:7,5,6,7,1,8,9:2,10,11,9,12,1:3,9:11,13,1,9:3,14,15,9:5,16,9:7" +
",17,18,9:3,19,20,9,1,9:15,21,1:2,9:2,22,9:6,1:4,9,1,9:3,1,23,1,24,25,26,1:5" +
",27,28,29,30,1:4,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,5" +
"0,51,52,53,54,55,56,57,58,59,60,13,61,62,63,64,65,66,67,68,69,70,71,72,73,7" +
"4,75,76,77,62,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,9" +
"8,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,18,116" +
",117,28,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134" +
",135,136,79,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152" +
",153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,17" +
"1,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,1" +
"90,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208," +
"209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227" +
",228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,24" +
"6,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,2" +
"65,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283," +
"284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302" +
",303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,32" +
"1,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,9,338,339" +
",340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,35" +
"8,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,3" +
"77,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395," +
"396,397,398,9,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,4" +
"14,415")[0];

	private int yy_nxt[][] = unpackFromString(416,50,
"1,2,115,3,363,116,124,127,424,429,489,368,129,272,370,496:2,502,371,286,372" +
",373,292,430,-1:2,431,496:2,4,5,6,114,496,7,8,9,10,11,12,13,14,15,16,5:2,37" +
"4,-1:55,115,-1:50,496,432,496:4,433,496:14,-1,434,496:3,-1,434,-1:2,496,-1:" +
"10,434:2,496,-1:13,140,-1:19,5,-1:6,117,-1:6,5:2,-1:44,142,-1:51,24,25,-1:4" +
"9,26,-1:9,496:11,387,496:9,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:" +
"6,496:21,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:5,31,496:15," +
"-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:8,512,496,394,317,496" +
":4,451,496:4,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,23:21,-1,23:" +
"4,-1,23,-1:2,23,-1:10,23:3,-1:33,38,-1:13,38:2,-1:7,496:21,180,434,496:3,-1" +
",434,-1:2,496,-1:10,434:2,496,-1:6,496:21,182,434,496:3,-1,434,-1:2,496,-1:" +
"10,434:2,496,-1:4,174,176,496:8,414,496:12,-1,434,496:3,-1,434,-1:2,496,-1:" +
"10,434:2,496,-1:6,496:8,417,496:12,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2" +
",496,-1:4,126,-1,496:21,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,4" +
"96:21,194,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:16,75,496:4,-1" +
",434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:33,82,-1:4,119,-1:8,82:2,-1:3" +
"4,87,-1:4,120,228,-1:7,87:2,-1:34,104,-1:4,121,-1:8,104:2,-1:7,106:26,-1,10" +
"6:18,-1:31,110,-1:29,111,-1,112,-1,113,-1:39,23:21,-1:2,23:3,-1:4,23,-1:12," +
"23,-1:4,123,126,-1,128,-1:3,130,132,-1:2,134,-1:5,274,-1:2,136,-1:24,138,-1" +
":6,496:6,17,496:3,18,496:10,-1,434,435,496:2,-1,434,-1:2,496,-1:10,434:2,49" +
"6,-1:13,140,-1:19,117,-1:13,117:2,-1:7,106:26,39,106:18,39:2,-1:2,126,-1:50" +
",496:7,436,376,296,496:3,19,496:7,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2," +
"496,-1:33,125,-1:4,120,-1:8,125:2,-1:50,138,-1:6,496,131,496:8,133,135,496:" +
"4,20,496:4,-1,434,137,496:2,-1,434,-1:2,496,-1:10,434:2,496,-1:13,144,-1:42" +
",496:10,21,496:5,22,496:4,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:1" +
"2,275,-1:43,496,27,496:6,312,496:12,-1,434,496:3,-1,434,-1:2,496,-1:10,434:" +
"2,496,-1:15,146,-1:40,496:11,28,496,29,496:7,-1,434,496:3,-1,434,-1:2,496,-" +
"1:10,434:2,496,-1:16,287,-1:39,496:11,30,496:9,-1,434,496:3,-1,434,-1:2,496" +
",-1:10,434:2,496,-1:21,150,-1:34,32,496:20,-1,434,496:3,-1,434,-1:2,496,-1:" +
"10,434:2,496,-1:8,276,-1:47,496:8,33,496:12,-1,434,496:3,-1,434,-1:2,496,-1" +
":10,434:2,496,-1:33,38,-1:7,152,-1:5,38:2,-1:7,496,396,496:6,34,496:7,459,4" +
"96:4,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,39:47,-1:3,496:19,35" +
",496,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:24,154,-1:31,496:8,321" +
",496:3,36,496:8,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,158,-1:49" +
",496:10,37,496:10,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:15,162,-1" +
":40,496:7,40,496:13,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:7,277,-" +
"1:48,496:21,-1,434,496:3,-1,434,-1:2,496,166,-1:9,434:2,496,-1:6,496:7,41,4" +
"96:13,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:14,168,-1:41,496,42,4" +
"96:19,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:22,279,-1:33,496:7,43" +
",496:13,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:23,170,-1:32,496:14" +
",44,496:6,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:13,172,-1:42,496:" +
"5,45,496:15,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:8,293,-1:47,496" +
":6,46,496:14,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:16,118,-1:39,4" +
"96:7,47,496:13,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:48,178,-1:7," +
"48,496:20,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:4,174,176,-1:50,4" +
"96:19,49,496,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496,50,496:1" +
"9,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:12,176,-1:43,496:10,51,49" +
"6:10,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:4,126,186,-1:43,138,-1" +
":4,174,176,496:21,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:4,126,-1:" +
"51,496:7,52,496:13,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:38,66,-1" +
":17,496:6,53,496:14,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:32,188," +
"-1:23,496:8,54,496:12,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:14,19" +
"0,-1:41,496:21,-1,434,496:2,55,-1,434,-1:2,496,-1:10,434:2,496,-1:9,196,-1:" +
"46,496:7,56,496:13,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:8,198,-1" +
":47,496:7,57,496:13,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:33,425," +
"-1:13,425:2,-1:7,496:12,58,496:8,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,4" +
"96,-1:10,204,-1:45,496:10,59,496:10,-1,434,496:3,-1,434,-1:2,496,-1:10,434:" +
"2,496,-1:47,82:2,-1:7,60,496:20,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,49" +
"6,-1:11,282,-1:44,496:7,61,496:13,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2," +
"496,-1:19,83,-1:36,496:17,62,496:3,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2" +
",496,-1:21,210,-1:34,496:7,63,496:13,-1,434,496:3,-1,434,-1:2,496,-1:10,434" +
":2,496,-1:19,84,-1:36,496:7,64,496:13,-1,434,496:3,-1,434,-1:2,496,-1:10,43" +
"4:2,496,-1:15,295,-1:40,496,65,496:19,-1,434,496:3,-1,434,-1:2,496,-1:10,43" +
"4:2,496,-1:9,288,-1:46,496:21,184,434,496:3,-1,434,-1:2,496,-1:10,434:2,496" +
",-1:24,214,-1:31,496:10,67,496:10,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2," +
"496,-1:47,87:2,-1:15,218,-1:41,496:7,68,496:13,-1,434,496:3,-1,434,-1:2,496" +
",-1:10,434:2,496,-1:6,496:8,69,496:12,-1,434,496:3,-1,434,-1:2,496,-1:10,43" +
"4:2,496,-1:12,226,-1:43,496:16,70,496:4,-1,434,496:3,-1,434,-1:2,496,-1:10," +
"434:2,496,-1:31,285,-1:24,496:7,71,496:13,-1,434,496:3,-1,434,-1:2,496,-1:1" +
"0,434:2,496,-1:13,232,-1:42,496:7,72,496:13,-1,434,496:3,-1,434,-1:2,496,-1" +
":10,434:2,496,-1:29,234,-1:26,496:8,73,496:12,-1,434,496:3,-1,434,-1:2,496," +
"-1:10,434:2,496,-1:14,236,-1:41,74,496:20,-1,434,496:3,-1,434,-1:2,496,-1:1" +
"0,434:2,496,-1:13,94,-1:42,496:10,76,496:10,-1,434,496:3,-1,434,-1:2,496,-1" +
":10,434:2,496,-1:8,240,-1:47,496:7,77,496:13,-1,434,496:3,-1,434,-1:2,496,-" +
"1:10,434:2,496,-1:47,125:2,-1:7,496:21,202,434,496:3,-1,434,-1:2,496,-1:10," +
"434:2,496,-1:12,246,-1:43,496:21,206,434,496:3,-1,434,-1:2,496,-1:10,434:2," +
"496,-1:6,496,289,496:19,-1,434,496:3,-1,434,-1:2,496,208,-1:9,434:2,496,-1:" +
"10,248,-1:45,496:8,78,496:12,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-" +
"1:8,95,-1:47,496,79,496:19,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:" +
"34,428,-1:21,496:10,80,496:10,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496," +
"-1:25,96,-1:30,496,81,496:19,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-" +
"1:19,97,-1:36,496:16,85,496:4,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496," +
"-1:19,99,-1:36,496:8,86,496:12,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496" +
",-1:13,297,-1:40,212,-1,496:21,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496" +
",-1:12,250,-1:43,496:8,88,496:12,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,4" +
"96,-1:19,365,-1:36,496:21,216,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:" +
"14,254,-1:41,496:8,89,496:12,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-" +
"1:27,256,-1:28,496:6,263,496:14,220,434,496:3,-1,434,-1:2,496,-1:10,434:2,4" +
"96,-1:8,260,-1:47,496:8,90,496:12,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2," +
"496,-1:6,262,-1:30,264,-1:18,496:7,91,496:13,-1,434,496:3,-1,434,-1:2,496,-" +
"1:10,434:2,496,-1:24,103,-1:31,496:8,92,496:12,-1,434,496:3,-1,434,-1:2,496" +
",-1:10,434:2,496,-1:37,264,-1:18,496:21,220,434,496:3,-1,434,-1:2,496,-1:10" +
",434:2,496,-1:47,104:2,-1:7,496:16,93,496:4,-1,434,496:3,-1,434,-1:2,496,-1" +
":10,434:2,496,-1:32,105,-1:23,496:6,98,496:14,-1,434,496:3,-1,434,-1:2,496," +
"-1:10,434:2,496,-1:3,1,-1:2,106:26,107,106:10,273,106:7,108,109,-1:3,496:6," +
"100,496:14,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:6,101,496:" +
"14,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,102,496:20,-1,434,496:" +
"3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:2,139,496,491,496:10,300,496:5,-" +
"1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,106:26,-1,106:10,122,106:7" +
",-1:15,148,-1:41,156,-1:56,164,-1:41,168,-1:48,496:21,-1,434,496:3,-1,434,-" +
"1:2,496,192,-1:9,434:2,496,-1:22,176,-1:36,200,-1:73,238,-1:13,238:2,-1:22," +
"284,-1:34,496:21,280,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:12,230,-1" +
":50,242,-1:42,496:2,305,496:4,141,496:5,513,445,143,496:5,-1,434,496:3,-1,4" +
"34,-1:2,496,-1:10,434:2,496,-1:16,160,-1:40,224,-1:48,496:21,-1,434,496:3,-" +
"1,434,-1:2,496,208,-1:9,434:2,496,-1:33,266,-1:13,266:2,-1:14,244,-1:42,496" +
":4,145,496:4,147,496:11,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:16," +
"176,-1:39,496:21,-1,434,496:2,149,-1,434,-1:2,496,-1:10,434:2,496,-1:16,222" +
",-1:39,496:8,151,496:12,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:16," +
"252,-1:39,496:15,153,496:5,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:" +
"16,258,-1:39,496,155,496:19,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1" +
":6,496:8,157,496:12,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:2" +
",159,496:18,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496,453,496:3" +
",454,496:10,161,496,455,496:2,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496," +
"-1:6,496:7,163,496,319,496:11,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496," +
"-1:6,496:19,165,496,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:1" +
"6,167,496:4,-1,434,397,496:2,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:2,169" +
",496:18,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496,171,496:19,-1" +
",434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:9,173,496:11,-1,434,496" +
":3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:8,175,496:12,-1,434,496:3,-1,43" +
"4,-1:2,496,-1:10,434:2,496,-1:6,496:7,177,496:13,-1,434,496:3,-1,434,-1:2,4" +
"96,-1:10,434:2,496,-1:6,496:7,179,496:13,-1,434,496:3,-1,434,-1:2,496,-1:10" +
",434:2,496,-1:6,496:10,181,496:10,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2," +
"496,-1:6,496:5,183,496:15,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6" +
",496:7,185,496:13,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496,187" +
",496:19,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:7,189,496:13," +
"-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:2,191,496:18,-1,434,4" +
"96,333,496,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:10,193,496:10,-1,434,49" +
"6:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:16,195,496:4,-1,434,496:3,-1,4" +
"34,-1:2,496,-1:10,434:2,496,-1:6,496:5,197,496:15,-1,434,496:3,-1,434,-1:2," +
"496,-1:10,434:2,496,-1:6,496:6,199,496:14,-1,434,496:3,-1,434,-1:2,496,-1:1" +
"0,434:2,496,-1:6,496:15,201,496:5,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2," +
"496,-1:6,496:4,203,496:16,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6" +
",496:14,205,496:6,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:6,2" +
"83,496:14,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:19,207,496," +
"-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:16,209,496:4,-1,434,4" +
"96:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:8,211,496:12,-1,434,496:3,-1," +
"434,-1:2,496,-1:10,434:2,496,-1:6,496:14,213,496:6,-1,434,496:3,-1,434,-1:2" +
",496,-1:10,434:2,496,-1:6,496:8,215,496:12,-1,434,496:3,-1,434,-1:2,496,-1:" +
"10,434:2,496,-1:6,496:6,209,496:14,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2" +
",496,-1:6,496:15,217,496:5,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:" +
"6,496:8,219,496:12,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:5," +
"221,496:15,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:10,223,496" +
":10,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:8,278,496:12,-1,4" +
"34,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:7,225,496:13,-1,434,496:3" +
",-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:11,227,496:9,-1,434,496:3,-1,434," +
"-1:2,496,-1:10,434:2,496,-1:6,496:8,229,496:12,-1,434,496:3,-1,434,-1:2,496" +
",-1:10,434:2,496,-1:6,496:7,231,496:13,-1,434,496:3,-1,434,-1:2,496,-1:10,4" +
"34:2,496,-1:6,496:4,233,496:16,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496" +
",-1:6,496,235,496:19,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:" +
"4,237,496:16,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:20,239,-" +
"1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:4,241,496:16,-1,434,49" +
"6:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:14,243,496:6,-1,434,496:3,-1,4" +
"34,-1:2,496,-1:10,434:2,496,-1:6,496:5,245,496:15,-1,434,496:3,-1,434,-1:2," +
"496,-1:10,434:2,496,-1:6,496,247,496:19,-1,434,496:3,-1,434,-1:2,496,-1:10," +
"434:2,496,-1:6,496:5,249,496:15,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,49" +
"6,-1:6,496:13,251,496:7,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,4" +
"96:10,367,496:10,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:12,2" +
"53,496:8,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:7,255,496:13" +
",-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:5,257,496:15,-1,434," +
"496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:14,259,496:6,-1,434,496:3,-1" +
",434,-1:2,496,-1:10,434:2,496,-1:6,496:10,261,496:10,-1,434,496:3,-1,434,-1" +
":2,496,-1:10,434:2,496,-1:6,496:7,265,496:13,-1,434,496:3,-1,434,-1:2,496,-" +
"1:10,434:2,496,-1:6,496:7,267,496:13,-1,434,496:3,-1,434,-1:2,496,-1:10,434" +
":2,496,-1:6,496:7,269,496:13,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-" +
"1:6,496:7,270,496:13,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:" +
"10,271,496:10,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:7,375,4" +
"96,294,496:11,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:33,281,-1:13," +
"281:2,-1:16,299,-1:65,291,-1:24,496:21,366,434,496:3,-1,434,-1:2,496,-1:10," +
"434:2,496,-1:6,496:4,380,496,298,496:14,-1,434,496:3,-1,434,-1:2,496,-1:10," +
"434:2,496,-1:33,290,-1:13,290:2,-1:7,496:4,301,496,302,303,496,492,496:11,-" +
"1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:10,381,496:3,444,496,3" +
"04,496:4,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:4,306,496:16" +
",-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496,446,499,496,382,496," +
"307,496:8,308,496:5,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:2" +
",309,496:18,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:18,310,49" +
"6:2,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:6,311,496:14,-1,4" +
"34,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496,388,496:4,506,496:3,498,4" +
"96:4,313,496:5,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:4,508," +
"496:2,314,496:13,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:6,31" +
"5,496:14,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:3,316,496:17" +
",-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:9,318,496:11,-1,434," +
"496:2,458,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496,320,496:19,-1,434,496:3," +
"-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:7,322,496:13,-1,434,496:3,-1,434,-" +
"1:2,496,-1:10,434:2,496,-1:6,496,323,496:19,-1,434,496:3,-1,434,-1:2,496,-1" +
":10,434:2,496,-1:6,496:3,324,496:17,-1,434,496:3,-1,434,-1:2,496,-1:10,434:" +
"2,496,-1:6,496:15,325,496:5,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1" +
":6,496:7,326,496:13,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:1" +
"5,327,496:5,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:16,328,49" +
"6:4,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:4,329,496:16,-1,4" +
"34,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:17,310,496:3,-1,434,496:3" +
",-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:7,330,496:13,-1,434,496:3,-1,434," +
"-1:2,496,-1:10,434:2,496,-1:6,496:16,331,496:4,-1,434,496:3,-1,434,-1:2,496" +
",-1:10,434:2,496,-1:6,496:7,332,496:13,-1,434,496:3,-1,434,-1:2,496,-1:10,4" +
"34:2,496,-1:6,496:4,334,496:16,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496" +
",-1:6,496:7,335,496:13,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,49" +
"6:9,336,496:11,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:4,337," +
"496:16,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:7,338,496:13,-" +
"1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:4,339,496:16,-1,434,49" +
"6:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:6,340,496:14,-1,434,496:3,-1,4" +
"34,-1:2,496,-1:10,434:2,496,-1:6,496:8,341,496:12,-1,434,496:3,-1,434,-1:2," +
"496,-1:10,434:2,496,-1:6,496:19,342,496,-1,434,496:3,-1,434,-1:2,496,-1:10," +
"434:2,496,-1:6,496:15,343,496:5,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,49" +
"6,-1:6,496:9,344,496:11,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,4" +
"96:2,345,496:18,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:9,346" +
",496:11,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:4,347,496:16," +
"-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:9,348,496:11,-1,434,4" +
"96:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:4,349,496:16,-1,434,496:3,-1," +
"434,-1:2,496,-1:10,434:2,496,-1:6,496:10,350,496:10,-1,434,496:3,-1,434,-1:" +
"2,496,-1:10,434:2,496,-1:6,496:6,351,496:14,-1,434,496:3,-1,434,-1:2,496,-1" +
":10,434:2,496,-1:6,352,496:20,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496," +
"-1:6,496:7,353,496:13,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496" +
":8,354,496:12,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:7,355,4" +
"96:13,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:13,356,496:7,-1" +
",434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:9,357,496:11,-1,434,496" +
":3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:5,358,496:15,-1,434,496:3,-1,43" +
"4,-1:2,496,-1:10,434:2,496,-1:6,496:16,359,496:4,-1,434,496:3,-1,434,-1:2,4" +
"96,-1:10,434:2,496,-1:6,496:16,360,496:4,-1,434,496:3,-1,434,-1:2,496,-1:10" +
",434:2,496,-1:6,496:16,361,496:4,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,4" +
"96,-1:6,496:9,362,496:11,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6," +
"496:2,377,496,437,496,438,496:8,439,496,378,496:3,-1,434,496:3,-1,434,-1:2," +
"496,-1:10,434:2,496,-1:33,364,-1:13,364:2,-1:35,369,-1:48,426,-1:13,426:2,-" +
"1:34,427,-1:13,427:2,-1:7,496:7,440,379,441,496:11,-1,434,496:3,-1,434,-1:2" +
",496,-1:10,434:2,496,-1:6,496:17,383,496:3,-1,434,496:3,-1,434,-1:2,496,-1:" +
"10,434:2,496,-1:6,496:4,384,496:16,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2" +
",496,-1:6,496:2,385,496:18,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:" +
"6,496:2,386,496:18,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:7," +
"504,496:13,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:8,447,496:" +
"12,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:16,448,496:4,-1,43" +
"4,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:2,389,496:4,390,496:13,-1," +
"434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:6,507,496:14,-1,434,496:" +
"3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:16,449,496,450,496:2,-1,434,496:" +
"3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,391,496:20,-1,434,496:3,-1,434,-1:2," +
"496,-1:10,434:2,496,-1:6,496:5,392,496:3,393,496:11,-1,434,496:3,-1,434,-1:" +
"2,496,-1:10,434:2,496,-1:6,496:9,457,496:11,-1,434,496:3,-1,434,-1:2,496,-1" +
":10,434:2,496,-1:6,496:11,395,496:9,-1,434,496:3,-1,434,-1:2,496,-1:10,434:" +
"2,496,-1:6,496:4,460,496:16,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1" +
":6,496:2,398,496:18,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:2" +
"0,399,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:5,400,496:15,-1" +
",434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:8,465,496:12,-1,434,496" +
":3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:7,509,496:13,-1,434,496:3,-1,43" +
"4,-1:2,496,-1:10,434:2,496,-1:6,496:7,401,496:13,-1,434,496:3,-1,434,-1:2,4" +
"96,-1:10,434:2,496,-1:6,496:15,466,496:5,-1,434,496:3,-1,434,-1:2,496,-1:10" +
",434:2,496,-1:6,496:7,402,496:13,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,4" +
"96,-1:6,496:9,403,496:11,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6," +
"496:4,404,496:16,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:8,40" +
"5,496:12,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:19,468,496,-" +
"1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:10,406,496:10,-1,434,4" +
"96:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:16,469,496:4,-1,434,496:3,-1," +
"434,-1:2,496,-1:10,434:2,496,-1:6,496:8,407,496:12,-1,434,496:3,-1,434,-1:2" +
",496,-1:10,434:2,496,-1:6,496:7,470,496:13,-1,434,496:3,-1,434,-1:2,496,-1:" +
"10,434:2,496,-1:6,496,408,496:19,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,4" +
"96,-1:6,496:8,511,496:12,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6," +
"496:4,473,496:16,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:6,40" +
"9,496:14,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:6,410,496:14" +
",-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:9,411,496:11,-1,434," +
"496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:4,412,496:16,-1,434,496:3,-1" +
",434,-1:2,496,-1:10,434:2,496,-1:6,496:9,476,496:11,-1,434,496:3,-1,434,-1:" +
"2,496,-1:10,434:2,496,-1:6,496:9,413,496:11,-1,434,496:3,-1,434,-1:2,496,-1" +
":10,434:2,496,-1:6,496:16,478,496:4,-1,434,496:3,-1,434,-1:2,496,-1:10,434:" +
"2,496,-1:6,496:10,480,496:10,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-" +
"1:6,496:5,415,496:15,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:" +
"7,481,496:13,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:16,416,4" +
"96:4,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:2,482,496:18,-1," +
"434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:19,490,496,-1,434,496:3," +
"-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:14,483,496:6,-1,434,496:3,-1,434,-" +
"1:2,496,-1:10,434:2,496,-1:6,496:4,418,496:16,-1,434,496:3,-1,434,-1:2,496," +
"-1:10,434:2,496,-1:6,496:8,497,496:12,-1,434,496:3,-1,434,-1:2,496,-1:10,43" +
"4:2,496,-1:6,496:10,419,496:10,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496" +
",-1:6,496:10,503,496:10,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,4" +
"96:2,485,496:18,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:15,42" +
"0,496:5,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:10,488,496:10" +
",-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:15,421,496:5,-1,434," +
"496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:15,422,496:5,-1,434,496:3,-1" +
",434,-1:2,496,-1:10,434:2,496,-1:6,496:11,423,496:9,-1,434,496:3,-1,434,-1:" +
"2,496,-1:10,434:2,496,-1:6,496:12,442,496:8,-1,434,496:3,-1,434,-1:2,496,-1" +
":10,434:2,496,-1:6,496:21,-1,484,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6" +
",496:8,452,496:12,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:16," +
"494,496:4,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:6,456,496:1" +
"4,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:8,467,496:12,-1,434" +
",496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:7,471,496:13,-1,434,496:3,-" +
"1,434,-1:2,496,-1:10,434:2,496,-1:6,496:21,-1,486,496:3,-1,434,-1:2,496,-1:" +
"10,434:2,496,-1:6,496:16,463,496:4,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2" +
",496,-1:6,496:6,461,496:14,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:" +
"6,496:8,505,496:12,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:7," +
"472,496:13,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:4,493,496," +
"443,496:14,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:21,-1,487," +
"496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:6,462,496:14,-1,434,496:3,-1" +
",434,-1:2,496,-1:10,434:2,496,-1:6,496:7,477,496:13,-1,434,496:3,-1,434,-1:" +
"2,496,-1:10,434:2,496,-1:6,496:6,495,496:14,-1,434,496:3,-1,434,-1:2,496,-1" +
":10,434:2,496,-1:6,496:6,501,496:14,-1,434,496:3,-1,434,-1:2,496,-1:10,434:" +
"2,496,-1:6,496:6,464,496:14,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1" +
":6,496:6,474,496:14,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:6" +
",475,496:14,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:6,479,496" +
":14,-1,434,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:7,510,496:13,-1,4" +
"34,496:3,-1,434,-1:2,496,-1:10,434:2,496,-1:6,496:16,500,496:4,-1,434,496:3" +
",-1,434,-1:2,496,-1:10,434:2,496,-1:3");

	public java_cup.runtime.Symbol next_token ()
		throws java.io.IOException {
		int yy_lookahead;
		int yy_anchor = YY_NO_ANCHOR;
		int yy_state = yy_state_dtrans[yy_lexical_state];
		int yy_next_state = YY_NO_STATE;
		int yy_last_accept_state = YY_NO_STATE;
		boolean yy_initial = true;
		int yy_this_accept;

		yy_mark_start();
		yy_this_accept = yy_acpt[yy_state];
		if (YY_NOT_ACCEPT != yy_this_accept) {
			yy_last_accept_state = yy_state;
			yy_mark_end();
		}
		while (true) {
			if (yy_initial && yy_at_bol) yy_lookahead = YY_BOL;
			else yy_lookahead = yy_advance();
			yy_next_state = YY_F;
			yy_next_state = yy_nxt[yy_rmap[yy_state]][yy_cmap[yy_lookahead]];
			if (YY_EOF == yy_lookahead && true == yy_initial) {
				return null;
			}
			if (YY_F != yy_next_state) {
				yy_state = yy_next_state;
				yy_initial = false;
				yy_this_accept = yy_acpt[yy_state];
				if (YY_NOT_ACCEPT != yy_this_accept) {
					yy_last_accept_state = yy_state;
					yy_mark_end();
				}
			}
			else {
				if (YY_NO_STATE == yy_last_accept_state) {
					throw (new Error("Lexical Error: Unmatched Input."));
				}
				else {
					yy_anchor = yy_acpt[yy_last_accept_state];
					if (0 != (YY_END & yy_anchor)) {
						yy_move_end();
					}
					yy_to_mark();
					switch (yy_last_accept_state) {
					case 1:
						
					case -2:
						break;
					case 2:
						{  }
					case -3:
						break;
					case 3:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -4:
						break;
					case 4:
						{ string.setLength(0); yybegin(STRING); }
					case -5:
						break;
					case 5:
						{ return sym(ParsCommandSym.ENL, yytext()); }
					case -6:
						break;
					case 6:
						{ return sym(ParsCommandSym.MINUS); }
					case -7:
						break;
					case 7:
						{ return sym(ParsCommandSym.LPARENT); }
					case -8:
						break;
					case 8:
						{ return sym(ParsCommandSym.RPARENT); }
					case -9:
						break;
					case 9:
						{ return sym(ParsCommandSym.COMMA); }
					case -10:
						break;
					case 10:
						{ return sym(ParsCommandSym.DOT); }
					case -11:
						break;
					case 11:
						{ return sym(ParsCommandSym.PLUS); }
					case -12:
						break;
					case 12:
						{ return sym(ParsCommandSym.ASTERISK); }
					case -13:
						break;
					case 13:
						{ return sym(ParsCommandSym.SOLIDUS); }
					case -14:
						break;
					case 14:
						{ return sym(ParsCommandSym.LESS); }
					case -15:
						break;
					case 15:
						{ return sym(ParsCommandSym.GREATER); }
					case -16:
						break;
					case 16:
						{ return sym(ParsCommandSym.EQUAL); }
					case -17:
						break;
					case 17:
						{ return sym(ParsCommandSym.OR); }
					case -18:
						break;
					case 18:
						{ return sym(ParsCommandSym.ON); }
					case -19:
						break;
					case 19:
						{ return sym(ParsCommandSym.BY); }
					case -20:
						break;
					case 20:
						{ return sym(ParsCommandSym.AS); }
					case -21:
						break;
					case 21:
						{ return sym(ParsCommandSym.IN); }
					case -22:
						break;
					case 22:
						{ return sym(ParsCommandSym.IS); }
					case -23:
						break;
					case 23:
						{ return sym(ParsCommandSym.PAR_VAR_NAME, yytext()); }
					case -24:
						break;
					case 24:
						{ return sym(ParsCommandSym.NOT_EQUAL); }
					case -25:
						break;
					case 25:
						{ return sym(ParsCommandSym.LESS_EQUAL); }
					case -26:
						break;
					case 26:
						{ return sym(ParsCommandSym.GREATER_EQUAL); }
					case -27:
						break;
					case 27:
						{ return sym(ParsCommandSym.ALL); }
					case -28:
						break;
					case 28:
						{ return sym(ParsCommandSym.AND); }
					case -29:
						break;
					case 29:
						{ return sym(ParsCommandSym.ANY); }
					case -30:
						break;
					case 30:
						{ return sym(ParsCommandSym.ADD); }
					case -31:
						break;
					case 31:
						{ return sym(ParsCommandSym.ASC); }
					case -32:
						break;
					case 32:
						{ return sym(ParsCommandSym.AVG); }
					case -33:
						break;
					case 33:
						{ return sym(ParsCommandSym.NOT); }
					case -34:
						break;
					case 34:
						{ return sym(ParsCommandSym.SET); }
					case -35:
						break;
					case 35:
						{ return sym(ParsCommandSym.SUM); }
					case -36:
						break;
					case 36:
						{ return sym(ParsCommandSym.MAX); }
					case -37:
						break;
					case 37:
						{ return sym(ParsCommandSym.MIN); }
					case -38:
						break;
					case 38:
						{ return sym(ParsCommandSym.ANL, yytext()); }
					case -39:
						break;
					case 39:
						{	return sym(ANY); }
					case -40:
						break;
					case 40:
						{ return sym(ParsCommandSym.LIKE); }
					case -41:
						break;
					case 41:
						{ return sym(ParsCommandSym.TRUE); }
					case -42:
						break;
					case 42:
						{ return sym(ParsCommandSym.NULL); }
					case -43:
						break;
					case 43:
						{ return sym(ParsCommandSym.DATE); }
					case -44:
						break;
					case 44:
						{ return sym(ParsCommandSym.DROP); }
					case -45:
						break;
					case 45:
						{ return sym(ParsCommandSym.DESC); }
					case -46:
						break;
					case 46:
						{ return sym(ParsCommandSym.USER); }
					case -47:
						break;
					case 47:
						{ return sym(ParsCommandSym.SOME); }
					case -48:
						break;
					case 48:
						{ return sym(ParsCommandSym.HASH); }
					case -49:
						break;
					case 49:
						{ return sym(ParsCommandSym.FROM); }
					case -50:
						break;
					case 50:
						{ return sym(ParsCommandSym.FULL); }
					case -51:
						break;
					case 51:
						{ return sym(ParsCommandSym.JOIN_TYPE, yytext().toLowerCase()); }
					case -52:
						break;
					case 52:
						{ return sym(ParsCommandSym.BTREE); }
					case -53:
						break;
					case 53:
						{ return sym(ParsCommandSym.ALTER); }
					case -54:
						break;
					case 54:
						{ return sym(ParsCommandSym.COUNT); }
					case -55:
						break;
					case 55:
						{ return sym(ParsCommandSym.CHECK); }
					case -56:
						break;
					case 56:
						{ return sym(ParsCommandSym.RTREE); }
					case -57:
						break;
					case 57:
						{ return sym(ParsCommandSym.TABLE); }
					case -58:
						break;
					case 58:
						{ return sym(ParsCommandSym.INDEX); }
					case -59:
						break;
					case 59:
						{ return sym(ParsCommandSym.UNION); }
					case -60:
						break;
					case 60:
						{ return sym(ParsCommandSym.USING); }
					case -61:
						break;
					case 61:
						{ return sym(ParsCommandSym.FALSE); }
					case -62:
						break;
					case 62:
						{ return sym(ParsCommandSym.MATCH); }
					case -63:
						break;
					case 63:
						{ return sym(ParsCommandSym.WHERE); }
					case -64:
						break;
					case 64:
						{ return sym(ParsCommandSym.VALUE); }
					case -65:
						break;
					case 65:
						{ notCompError(yytext()); }
					case -66:
						break;
					case 66:
						{ return sym(ParsCommandSym.BOOL); }
					case -67:
						break;
					case 67:
						{ return sym(ParsCommandSym.COLUMN); }
					case -68:
						break;
					case 68:
						{ return sym(ParsCommandSym.CREATE); }
					case -69:
						break;
					case 69:
						{ return sym(ParsCommandSym.EXCEPT); }
					case -70:
						break;
					case 70:
						{ return sym(ParsCommandSym.EXISTS); }
					case -71:
						break;
					case 71:
						{ return sym(ParsCommandSym.UNIQUE); }
					case -72:
						break;
					case 72:
						{ return sym(ParsCommandSym.UPDATE); }
					case -73:
						break;
					case 73:
						{ return sym(ParsCommandSym.SELECT); }
					case -74:
						break;
					case 74:
						{ return sym(ParsCommandSym.HAVING); }
					case -75:
						break;
					case 75:
						{ return sym(ParsCommandSym.VALUES); }
					case -76:
						break;
					case 76:
						{ return sym(ParsCommandSym.BETWEEN); }
					case -77:
						break;
					case 77:
						{ return sym(ParsCommandSym.CASCADE); }
					case -78:
						break;
					case 78:
						{ return sym(ParsCommandSym.DEFAULT); }
					case -79:
						break;
					case 79:
						{ return sym(ParsCommandSym.PARTIAL); }
					case -80:
						break;
					case 80:
						{ return sym(ParsCommandSym.UNKNOWN); }
					case -81:
						break;
					case 81:
						{ return sym(ParsCommandSym.SPATIAL); }
					case -82:
						break;
					case 82:
						{ return sym(ParsCommandSym.REAL); }
					case -83:
						break;
					case 83:
						{ return sym(ParsCommandSym.GROUP_BY); }
					case -84:
						break;
					case 84:
						{ return sym(ParsCommandSym.ORDER_BY); }
					case -85:
						break;
					case 85:
						{ return sym(ParsCommandSym.OVERLAPS); }
					case -86:
						break;
					case 86:
						{ return sym(ParsCommandSym.RESTRICT); }
					case -87:
						break;
					case 87:
						{ return sym(ParsCommandSym.INT); }
					case -88:
						break;
					case 88:
						{ return sym(ParsCommandSym.DISTINCT); }
					case -89:
						break;
					case 89:
						{ return sym(ParsCommandSym.FULLTEXT); }
					case -90:
						break;
					case 90:
						{ return sym(ParsCommandSym.INTERSECT); }
					case -91:
						break;
					case 91:
						{ return sym(ParsCommandSym.INDEXTYPE); }
					case -92:
						break;
					case 92:
						{ return sym(ParsCommandSym.CONSTRAINT); }
					case -93:
						break;
					case 93:
						{ return sym(ParsCommandSym.REFERENCES); }
					case -94:
						break;
					case 94:
						{ return sym(ParsCommandSym.DROP_TABLE); }
					case -95:
						break;
					case 95:
						{ return sym(ParsCommandSym.INSERT_INTO); }
					case -96:
						break;
					case 96:
						{ return sym(ParsCommandSym.DELETE_FROM); }
					case -97:
						break;
					case 97:
						{ return sym(ParsCommandSym.PRIM_KEY); }
					case -98:
						break;
					case 98:
						{ return sym(ParsCommandSym.SYSTEM_USER); }
					case -99:
						break;
					case 99:
						{ return sym(ParsCommandSym.FOREIGN_KEY); }
					case -100:
						break;
					case 100:
						{ return sym(ParsCommandSym.CURRENT_USER); }
					case -101:
						break;
					case 101:
						{ return sym(ParsCommandSym.SESSION_USER); }
					case -102:
						break;
					case 102:
						{ return sym(ParsCommandSym.CORRESPONDING); }
					case -103:
						break;
					case 103:
						{ return sym(ParsCommandSym.WHERE_CURRENT_OF); }
					case -104:
						break;
					case 104:
						{ return sym(ParsCommandSym.STRING); }
					case -105:
						break;
					case 105:
						{ return sym(ParsCommandSym.DATE_VALUE); }
					case -106:
						break;
					case 106:
						{ string.append(yytext()); }
					case -107:
						break;
					case 107:
						{ yybegin(YYINITIAL); return sym(ParsCommandSym.A_STRING, string.toString()); }
					case -108:
						break;
					case 108:
						{ string.append("\\"); }
					case -109:
						break;
					case 109:
						{ string.append("'"); }
					case -110:
						break;
					case 110:
						{ string.append("'"); }
					case -111:
						break;
					case 111:
						{ string.append("\r"); }
					case -112:
						break;
					case 112:
						{ string.append("\t"); }
					case -113:
						break;
					case 113:
						{ string.append("\n"); }
					case -114:
						break;
					case 115:
						{  }
					case -115:
						break;
					case 116:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -116:
						break;
					case 117:
						{ return sym(ParsCommandSym.ENL, yytext()); }
					case -117:
						break;
					case 118:
						{ return sym(ParsCommandSym.JOIN_TYPE, yytext().toLowerCase()); }
					case -118:
						break;
					case 119:
						{ return sym(ParsCommandSym.REAL); }
					case -119:
						break;
					case 120:
						{ return sym(ParsCommandSym.INT); }
					case -120:
						break;
					case 121:
						{ return sym(ParsCommandSym.STRING); }
					case -121:
						break;
					case 122:
						{ string.append(yytext()); }
					case -122:
						break;
					case 124:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -123:
						break;
					case 125:
						{ return sym(ParsCommandSym.INT); }
					case -124:
						break;
					case 127:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -125:
						break;
					case 129:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -126:
						break;
					case 131:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -127:
						break;
					case 133:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -128:
						break;
					case 135:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -129:
						break;
					case 137:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -130:
						break;
					case 139:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -131:
						break;
					case 141:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -132:
						break;
					case 143:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -133:
						break;
					case 145:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -134:
						break;
					case 147:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -135:
						break;
					case 149:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -136:
						break;
					case 151:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -137:
						break;
					case 153:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -138:
						break;
					case 155:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -139:
						break;
					case 157:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -140:
						break;
					case 159:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -141:
						break;
					case 161:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -142:
						break;
					case 163:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -143:
						break;
					case 165:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -144:
						break;
					case 167:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -145:
						break;
					case 169:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -146:
						break;
					case 171:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -147:
						break;
					case 173:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -148:
						break;
					case 175:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -149:
						break;
					case 177:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -150:
						break;
					case 179:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -151:
						break;
					case 181:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -152:
						break;
					case 183:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -153:
						break;
					case 185:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -154:
						break;
					case 187:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -155:
						break;
					case 189:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -156:
						break;
					case 191:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -157:
						break;
					case 193:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -158:
						break;
					case 195:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -159:
						break;
					case 197:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -160:
						break;
					case 199:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -161:
						break;
					case 201:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -162:
						break;
					case 203:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -163:
						break;
					case 205:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -164:
						break;
					case 207:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -165:
						break;
					case 209:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -166:
						break;
					case 211:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -167:
						break;
					case 213:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -168:
						break;
					case 215:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -169:
						break;
					case 217:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -170:
						break;
					case 219:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -171:
						break;
					case 221:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -172:
						break;
					case 223:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -173:
						break;
					case 225:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -174:
						break;
					case 227:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -175:
						break;
					case 229:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -176:
						break;
					case 231:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -177:
						break;
					case 233:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -178:
						break;
					case 235:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -179:
						break;
					case 237:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -180:
						break;
					case 239:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -181:
						break;
					case 241:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -182:
						break;
					case 243:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -183:
						break;
					case 245:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -184:
						break;
					case 247:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -185:
						break;
					case 249:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -186:
						break;
					case 251:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -187:
						break;
					case 253:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -188:
						break;
					case 255:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -189:
						break;
					case 257:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -190:
						break;
					case 259:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -191:
						break;
					case 261:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -192:
						break;
					case 263:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -193:
						break;
					case 265:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -194:
						break;
					case 267:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -195:
						break;
					case 269:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -196:
						break;
					case 270:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -197:
						break;
					case 271:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -198:
						break;
					case 272:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -199:
						break;
					case 273:
						{ string.append(yytext()); }
					case -200:
						break;
					case 278:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -201:
						break;
					case 283:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -202:
						break;
					case 286:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -203:
						break;
					case 289:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -204:
						break;
					case 292:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -205:
						break;
					case 294:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -206:
						break;
					case 296:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -207:
						break;
					case 298:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -208:
						break;
					case 300:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -209:
						break;
					case 301:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -210:
						break;
					case 302:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -211:
						break;
					case 303:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -212:
						break;
					case 304:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -213:
						break;
					case 305:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -214:
						break;
					case 306:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -215:
						break;
					case 307:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -216:
						break;
					case 308:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -217:
						break;
					case 309:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -218:
						break;
					case 310:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -219:
						break;
					case 311:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -220:
						break;
					case 312:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -221:
						break;
					case 313:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -222:
						break;
					case 314:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -223:
						break;
					case 315:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -224:
						break;
					case 316:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -225:
						break;
					case 317:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -226:
						break;
					case 318:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -227:
						break;
					case 319:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -228:
						break;
					case 320:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -229:
						break;
					case 321:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -230:
						break;
					case 322:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -231:
						break;
					case 323:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -232:
						break;
					case 324:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -233:
						break;
					case 325:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -234:
						break;
					case 326:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -235:
						break;
					case 327:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -236:
						break;
					case 328:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -237:
						break;
					case 329:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -238:
						break;
					case 330:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -239:
						break;
					case 331:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -240:
						break;
					case 332:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -241:
						break;
					case 333:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -242:
						break;
					case 334:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -243:
						break;
					case 335:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -244:
						break;
					case 336:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -245:
						break;
					case 337:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -246:
						break;
					case 338:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -247:
						break;
					case 339:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -248:
						break;
					case 340:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -249:
						break;
					case 341:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -250:
						break;
					case 342:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -251:
						break;
					case 343:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -252:
						break;
					case 344:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -253:
						break;
					case 345:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -254:
						break;
					case 346:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -255:
						break;
					case 347:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -256:
						break;
					case 348:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -257:
						break;
					case 349:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -258:
						break;
					case 350:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -259:
						break;
					case 351:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -260:
						break;
					case 352:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -261:
						break;
					case 353:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -262:
						break;
					case 354:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -263:
						break;
					case 355:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -264:
						break;
					case 356:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -265:
						break;
					case 357:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -266:
						break;
					case 358:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -267:
						break;
					case 359:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -268:
						break;
					case 360:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -269:
						break;
					case 361:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -270:
						break;
					case 362:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -271:
						break;
					case 363:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -272:
						break;
					case 367:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -273:
						break;
					case 368:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -274:
						break;
					case 370:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -275:
						break;
					case 371:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -276:
						break;
					case 372:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -277:
						break;
					case 373:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -278:
						break;
					case 374:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -279:
						break;
					case 375:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -280:
						break;
					case 376:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -281:
						break;
					case 377:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -282:
						break;
					case 378:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -283:
						break;
					case 379:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -284:
						break;
					case 380:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -285:
						break;
					case 381:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -286:
						break;
					case 382:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -287:
						break;
					case 383:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -288:
						break;
					case 384:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -289:
						break;
					case 385:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -290:
						break;
					case 386:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -291:
						break;
					case 387:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -292:
						break;
					case 388:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -293:
						break;
					case 389:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -294:
						break;
					case 390:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -295:
						break;
					case 391:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -296:
						break;
					case 392:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -297:
						break;
					case 393:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -298:
						break;
					case 394:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -299:
						break;
					case 395:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -300:
						break;
					case 396:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -301:
						break;
					case 397:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -302:
						break;
					case 398:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -303:
						break;
					case 399:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -304:
						break;
					case 400:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -305:
						break;
					case 401:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -306:
						break;
					case 402:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -307:
						break;
					case 403:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -308:
						break;
					case 404:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -309:
						break;
					case 405:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -310:
						break;
					case 406:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -311:
						break;
					case 407:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -312:
						break;
					case 408:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -313:
						break;
					case 409:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -314:
						break;
					case 410:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -315:
						break;
					case 411:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -316:
						break;
					case 412:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -317:
						break;
					case 413:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -318:
						break;
					case 414:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -319:
						break;
					case 415:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -320:
						break;
					case 416:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -321:
						break;
					case 417:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -322:
						break;
					case 418:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -323:
						break;
					case 419:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -324:
						break;
					case 420:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -325:
						break;
					case 421:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -326:
						break;
					case 422:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -327:
						break;
					case 423:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -328:
						break;
					case 424:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -329:
						break;
					case 429:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -330:
						break;
					case 430:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -331:
						break;
					case 431:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -332:
						break;
					case 432:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -333:
						break;
					case 433:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -334:
						break;
					case 434:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -335:
						break;
					case 435:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -336:
						break;
					case 436:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -337:
						break;
					case 437:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -338:
						break;
					case 438:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -339:
						break;
					case 439:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -340:
						break;
					case 440:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -341:
						break;
					case 441:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -342:
						break;
					case 442:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -343:
						break;
					case 443:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -344:
						break;
					case 444:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -345:
						break;
					case 445:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -346:
						break;
					case 446:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -347:
						break;
					case 447:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -348:
						break;
					case 448:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -349:
						break;
					case 449:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -350:
						break;
					case 450:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -351:
						break;
					case 451:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -352:
						break;
					case 452:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -353:
						break;
					case 453:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -354:
						break;
					case 454:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -355:
						break;
					case 455:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -356:
						break;
					case 456:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -357:
						break;
					case 457:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -358:
						break;
					case 458:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -359:
						break;
					case 459:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -360:
						break;
					case 460:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -361:
						break;
					case 461:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -362:
						break;
					case 462:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -363:
						break;
					case 463:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -364:
						break;
					case 464:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -365:
						break;
					case 465:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -366:
						break;
					case 466:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -367:
						break;
					case 467:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -368:
						break;
					case 468:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -369:
						break;
					case 469:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -370:
						break;
					case 470:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -371:
						break;
					case 471:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -372:
						break;
					case 472:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -373:
						break;
					case 473:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -374:
						break;
					case 474:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -375:
						break;
					case 475:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -376:
						break;
					case 476:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -377:
						break;
					case 477:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -378:
						break;
					case 478:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -379:
						break;
					case 479:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -380:
						break;
					case 480:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -381:
						break;
					case 481:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -382:
						break;
					case 482:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -383:
						break;
					case 483:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -384:
						break;
					case 484:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -385:
						break;
					case 485:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -386:
						break;
					case 486:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -387:
						break;
					case 487:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -388:
						break;
					case 488:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -389:
						break;
					case 489:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -390:
						break;
					case 490:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -391:
						break;
					case 491:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -392:
						break;
					case 492:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -393:
						break;
					case 493:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -394:
						break;
					case 494:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -395:
						break;
					case 495:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -396:
						break;
					case 496:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -397:
						break;
					case 497:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -398:
						break;
					case 498:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -399:
						break;
					case 499:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -400:
						break;
					case 500:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -401:
						break;
					case 501:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -402:
						break;
					case 502:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -403:
						break;
					case 503:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -404:
						break;
					case 504:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -405:
						break;
					case 505:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -406:
						break;
					case 506:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -407:
						break;
					case 507:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -408:
						break;
					case 508:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -409:
						break;
					case 509:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -410:
						break;
					case 510:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -411:
						break;
					case 511:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -412:
						break;
					case 512:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -413:
						break;
					case 513:
						{ return sym(ParsCommandSym.ID, yytext().toLowerCase()); }
					case -414:
						break;
					default:
						yy_error(YY_E_INTERNAL,false);
					case -1:
					}
					yy_initial = true;
					yy_state = yy_state_dtrans[yy_lexical_state];
					yy_next_state = YY_NO_STATE;
					yy_last_accept_state = YY_NO_STATE;
					yy_mark_start();
					yy_this_accept = yy_acpt[yy_state];
					if (YY_NOT_ACCEPT != yy_this_accept) {
						yy_last_accept_state = yy_state;
						yy_mark_end();
					}
				}
			}
		}
	}
}
