delete database btree2test;

#setup btree2rangetest BTree2Algebra

create database btree2test;
restore database btree2test from '$(SECONDO_BUILD_DIR)/Tests/Testspecs/btree2algebra/btree2testDB';

let b1 = Staedte createbtree[Bev];
let x1 = Staedte createbtree2[Bev];
let x2 = Staedte createbtree2[Bev, 0.33, 50];
let x3 = Staedte feed addid createbtree2[Bev];
let x4 = Staedte feed addid createbtree2[Bev, 0.85, 20];
let x5 = Staedte feed createbtree2[0.77, 60, Bev, SName, multiple];

#testcase keyrange2TypeMapError1
#yields error
query Staedte keyrange2[115000] consume;

#testcase keyrange2TypeMapError2
#yields error
query b1 keyrange2[150000] consume;

#testcase keyrange2TypeMapError3
#yields error
query x1 keyrange2["Dortmund"] consume;

#tolerance_real 0.0009

#testcase keyrange2Example1
#yields ((rel (tuple ((Less real)(Equal real)(Greater real)(NumOfKeys int))))((0.25862 0.03448 0.7069 58)))
query x1 keyrange2[134000] consume;

#testcase keyrange2Example2
#yields ((rel (tuple ((Less real)(Equal real)(Greater real)(NumOfKeys int))))((0.32759 0.0 0.67241 58)))
query x1 keyrange2[143000] consume;

#testcase keyrangeTypeMapError1
#yields error
query Staedte x1 keyrange[115000] consume;

#testcase keyrangeTypeMapError2
#yields error
query x1 b1 keyrange[115000] consume;

#testcase keyrangeTypeMapError3
#yields error
query x1 Staedte keyrange["Essen"] consume;

#testcase keyrangeTypeMapError4
#yields error
query x5 Staedte keyrange[134000] consume;

#testcase keyrangeExample1
#yields ((rel (tuple ((Less real)(Equal real)(Greater real)(NumOfKeys int))))((0.25862 0.03448 0.7069 58)))
query x1 Staedte keyrange[134000] consume;

#testcase keyrangeExample2
#yields ((rel (tuple ((Less real)(Equal real)(Greater real)(NumOfKeys int))))((0.32759 0.0 0.67241 58)))
query x1 Staedte keyrange[143000] consume;

#testcase getFileInfoTypeMapError1
#yields error
query getFileInfo(Bev);

#testcase getFileInfoExample
#yields success
query getFileInfo(x1);

#testcase treeheightTypeMapError1
#yields error
query treeheight(Staedte);

#testcase treeheightTypeMapError2
#yields error
query treeheight(b1);

#testcase treeheightExample
#yields (int 2)
query treeheight(x4);

#testcase no_nodesTypeMapError1
#yields error
query no_nodes(Staedte);

#testcase no_nodesTypeMapError2
#yields error
query no_nodes(b1);

#testcase no_nodesExample
#yields (int 1)
query no_nodes(x1);

#testcase no_entriesTypeMapError1
#yields error
query no_entries(Staedte);

#testcase no_entriesTypeMapError2
#yields error
query no_entries(b1);

#testcase no_entriesExample
#yields (int 58)
query no_entries(x1);

#testcase getRootNodeTypeMapError1
#yields error
query getRootNode(Staedte);

#testcase getRootNodeTypeMapError2
#yields error
query getRootNode(b1);

#testcase getRootNodeExample
#yields (int 2)
query getRootNode(x1);

# testcase getNodeInfoTypeMapError1
# yields error
query getNodeInfo(Staedte, 2) consume;

# testcase getNodeInfoTypeMapError2
# yields error
query getNodeInfo(b1, 2) consume;

# testcase getNodeInfoTypeMapError3
# yields error
query getNodeInfo(x1, "Berlin") consume;

#testcase getNodeInfoExample1
#yields ((rel (tuple ((NodeId int)(NoOfSons int)(IsLeafNode bool)(IsRootNode bool)(MinKey int))))((2 0 TRUE TRUE 100000)))
query getNodeInfo(x1, 2) consume;

#testcase getNodeInfoExample2
#yields  success
query getNodeInfo(x2, 11) consume;

#testcase getNodeInfoExample3
#yields success
query getNodeInfo(x2, 20) consume;

#testcase getNodeInfoExample4
#yields success
query getNodeInfo(x2, 17) consume;

# testcase getNodeSonsTypeMapError1
# yields error
query getNodeSons(Staedte, 2) consume;

# testcase getNodeSonsTypeMapError2
# yields error
query getNodeSons(b1, 2) consume;

# testcase getNodeSonsTypeMapError3
# yields error
query getNodeSons(x1, "Hagen") consume;

#testcase getNodeSons1
#yields ((rel (tuple ((NodeId int)(SonId int)(Lower int)(Upper int))))((2 undefined undefined undefined)))
query getNodeSons(x1, 2) consume;

#testcase getNodeSons2
#yields success
query getNodeSons(x2, 11) consume;

#testcase getNodeSons3
#yields success
query getNodeSons(x2, 20) consume;

#testcase getNodeSons4
#yields success
query getNodeSons(x2, 17) consume;

#testcase internal_node_capacityTypeMapError1
#yields error
query internal_node_capacity(Staedte);

#testcase internal_node_capacityTypeMapError2
#yields error
query internal_node_capacity(b1);

#testcase internal_node_capacityExample1
#yields (int 382)
query internal_node_capacity(x1);

#testcase internal_node_capacityExample2
#yields success
query internal_node_capacity(x2);

#testcase internal_node_capacityExample3
#yields (int 382)
query internal_node_capacity(x3);

#testcase internal_node_capacityExample4
#yields success
query internal_node_capacity(x4);

#testcase internal_node_capacityExample5
#yields success
query internal_node_capacity(x5);

#testcase leaf_node_capacityTypeMapError1
#yields error
query leaf_node_capacity(Staedte);

#testcase leaf_node_capacityTypeMapError2
#yields error
query leaf_node_capacity(b1);

#testcase leaf_node_capacityExample1
#yields (int 382)
query leaf_node_capacity(x1);

#testcase leaf_node_capacityExample2
#yields success
query leaf_node_capacity(x2);

#testcase leaf_node_capacityExample3
#yields (int 382)
query leaf_node_capacity(x3);

#testcase leaf_node_capacityExample4
#yields success
query leaf_node_capacity(x4);

#testcase leaf_node_capacityExample5
#yields (int 2)
query leaf_node_capacity(x5);

#testcase getMinFillDegreeTypeMapError1
#yields error
query getMinFillDegree(Staedte);

#testcase getMinFillDegreeTypeMapError2
#yields error
query getMinFillDegree(b1);

#testcase getMinFillDegreeExample1
#yields (real 0.5)
query getMinFillDegree(x1);

#testcase getMinFillDegreeExample2
#yields (real 0.33)
query getMinFillDegree(x2);

#testcase getMinFillDegreeExample3
#yields (real 0.5)
query getMinFillDegree(x3);

#testcase getMinFillDegreeExample4
#yields (real 0.85)
query getMinFillDegree(x4);

#testcase getMinFillDegreeExample5
#yields (real 0.77)
query getMinFillDegree(x5);

#testcase getNodeSizeTypeMapError1
#yields error
query getNodeSize(Staedte);

#testcase getNodeSizeTypeMapError2
#yields error
query getNodeSize(b1);

#testcase getNodeSizeExample1
#yields (int 3072)
query getNodeSize(x1);

#testcase getNodeSizeExample2
#yields success
query getNodeSize(x2);

#testcase getNodeSizeExample3
#yields (int 3072)
query getNodeSize(x3);

#testcase getNodeSizeExample4
#yields success
query getNodeSize(x4);

#testcase getNodeSizeExample5
#yields success
query getNodeSize(x5);


#teardown

close database;
delete database btree2test;
