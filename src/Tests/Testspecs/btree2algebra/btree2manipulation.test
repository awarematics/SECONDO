delete database btree2test;

#setup btree2rangetest BTree2Algebra

create database btree2test;
restore database btree2test from '$(SECONDO_BUILD_DIR)/Tests/Testspecs/btree2algebra/btree2testDB';

let b1 = Staedte createbtree[Bev];
let x3 = Staedte feed addid createbtree2[Bev, 0.85, 60];
let x4 = Staedte feed addid createbtree2[Bev, 0.85, 60];
let x5 = Staedte feed createbtree2[0.77, 60, Bev, SName, multiple];
let x6 = Staedte feed createbtree2[0.77, 60, Bev, SName, uniqueKey];
let x7 = Staedte feed createbtree2[0.77, 60, Bev, SName, uniqueKeyMultiData];
let x8 = Staedte feed createbtree2[0.77, 60, SName, none, uniqueKey];
let x9 = Staedte feed addid createbtree2[SName, 0.77, 60];
let x10 = Staedte feed createbtree[0.77, 60, SName, Bev, uniqueKey];
let x11 = Staedte feed head [1] consume;
query x11 inserttuple ["Teststadt", 239000, 28001, "0000", "TS"] count;
let x12 = Staedte feed head [1] consume;
query x12 inserttuple ["Teststadt", 2300, 28001, "0000", "TS"] count;

#testcase insertbtree2TypeMapError1
#yields error
query Staedte feed x8 insertbtree2[Bev] consume;

#testcase insertbtree2TypeMapError2
#yields error
query Staedte feed b1 insertbtree2[Bev, SName] consume;

#testcase insertbtree2TypeMapError3
#yields error
query x8 insertbtree2[SName, none] consume;

#testcase insertbtree2Example1a
#yields (int 1)
query Staedte feed head [1] extend [Testname: "Teststadt"] x8 insertbtree2 [Testname, none] count;

#testcase insertbtree2Example1b 
#yields ((rel (tuple ((Key string))))(("Teststadt")))
query x8 exactmatch2["Teststadt"]consume;

#testcase insertbtree2Example2
#yields (int 2)
query x12 feed x6 insertbtree2[Bev, SName] count;

#testcase insertbtree2Example3
#yields (int 1)
query Staedte feed head [1] x7 insertbtree2[Bev, SName] count;

#testcase insertbtree2Example4
#yields (int 2)
query x12 feed x7 insertbtree2 [Bev, SName] count

#testcase insertbtree2Example5
#yields (int 1)
query Staedte feed head [1] x5 insertbtree2[Bev, SName] count;

#testcase deletebtree2TypeMapError1
#yields error
query Staedte feed x8 deletebtree2[Bev] consume;

#testcase deletebtree2TypeMapError2
#yields error
query Staedte feed b1 deletebtree2[Bev, SName] consume;

#testcase deletebtree2Example1a
#yields (int 1)
query Staedte feed head [1] extend [Testname: "Teststadt"] x8 deletebtree2 [Testname, none] count;

#testcase deletebtree2Example1b 
#yields (int 0)
query x8 exactmatch2["Teststadt"]count;

#testcase deletebtree2Example2a 
#yields (int 1)
query x7 range2 [239000, 239001] count;

#testcase deletebtree2Example2b
#yields (int 2)
query x11 feed x7 deletebtree2 [Bev, SName] count;

#testcase deletebtree2Example2c 
#yields (int 0)
query x7 range2 [239000, 239001] count;

#testcase deletebtree2Example3a
#yields (int 2)
query x5 range2 [239000, 239001] count;

#testcase deletebtree2Example3b
#yields (int 1)
query Staedte feed head [1] x5 deletebtree2[Bev, SName] count;

#testcase deletebtree2Example3c 
#yields (int 1)
query x5 range2 [239000, 239001] count;

#testcase deletebtree2Example4
#yields (int 1)
query Staedte feed head [1] extend [Testname: "T"] x7 deletebtree2 [Bev, Testname] count

#testcase insertbtreeTypeMapError1
#yields error
query Staedte feed x4 insertbtree[Bev] consume;

#testcase insertbtreeTypeMapError2
#yields error
query Staedte feed b1 insertbtree[Bev] consume;

#testcase insertbtreeTypeMapError3
#yields error
query Staedte feed addid x4 insertbtree[SName, none] consume;

#testcase insertbtreeExample1a
#yields (int 0)
query Staedte feed head [1] extend [Testname: "Teststadt"] addid x9 insertbtree [Testname] count;

#testcase insertbtree2Example1b 
#yields (int 0)
query x9 Staedte exactmatch["Teststadt"] count;

#testcase insertbtreeExample2a
#yields (int 1)
query Staedte inserttuple ["Teststadt", 300001, 28001, "0000", "TS"] count

#testcase insertbtreeExample2b
#yields (int 1)
query Staedte feed filter [.SName = "Teststadt"] addid x4 insertbtree [Bev] count;

#testcase insertbtreeExample2c
#yields ((rel (tuple ((SName string))))(("Teststadt")))
query x4 Staedte exactmatch [300001] project [SName] consume 

#testcase deletebtreeTypeMapError1
#yields error
query Staedte feed x4 deletebtree[Bev] consume;

#testcase deletebtreeTypeMapError2
#yields error
query Staedte feed b1 deletebtree[Bev] consume;

#testcase deletebtreeTypeMapError3
#yields error
query Staedte feed addid x4 deletebtree[SName, none] consume;

#testcase deletebtreeExample1a
#yields (int 2)
query x12 feed addid x4 deletebtree [Bev] count;

#testcase deletebtreeExample1b
#yields (int 0)
query x4 Staedte exactmatch [Staedte feed extract [Bev]] project [SName] count;

#testcase deletebtreeExample2
#yields (int 1)
query Staedte feed head [1] extend [Bev_test: 100] addid x4 deletebtree [Bev_test] count;

#testcase updatebtree2TypeMapError1
#yields error
query Staedte feed x7 updatebtree2[SName] consume;

#testcase updatebtree2TypeMapError2
#yields error
query Staedte feed x7 updatebtree2[SName, Bev] consume;

#testcase updatebtree2TypeMapError3
#yields error
query Staedte feed b1 updatebtree2[SName, none] consume;

#testcase updatebtree2Example1a
#yields (int 1)
query Staedte feed head [1] extend [Testname: "Teststadt"] x10 updatebtree2 [Testname, Bev] count;

#testcase updatebtree2Example1b 
#yields ((rel (tuple ((Key string)(Data int))))(("Teststadt" 239000)))
query x10 exactmatch2 ["Teststadt"] consume;

#testcase updatebtree2Example2a
#yields (int 1)
query Staedte feed head [1] extend [Bev_test: 200001] x7 updatebtree2[Bev_test, SName] count;

#testcase updatebtree2Example2b
#yields ((rel (tuple ((Key int)(Data string))))((200001 "Aachen")))
query x7 exactmatch2 [200001] consume;

#testcase updatebtreeTypeMapError1
#yields error
query Staedte feed Staedte updatedirect [Bev: .Bev + 1000] x4 updatebtree [SName, Bev] count;

#testcase updatebtreeTypeMapError2
#yields error
query Staedte feed addid x4 updatebtree [Bev] count;

#testcase updatebtreeTypeMapError3
#yields error
query Staedte feed Staedte updatedirect [Bev: .Bev + 1000] x4 updatebtree [SName] count;

#testcase updatebtreeExample1a
#yields (int 1)
query Staedte feed Staedte updatedirect [Bev: .Bev + 1000] head [1] x3 updatebtree [Bev] count;

#testcase updatebtreeExample1b
#yields ((rel (tuple ((SName string))))(("Aachen")))
query x3 Staedte exactmatch [240000] project [SName] consume

#testcase updatebtreeExample1a
#yields (int 1)
query Staedte feed Staedte updatedirect [Bev: .Bev] head [1] x3 updatebtree [Bev] count;

#teardown

close database;
delete database btree2test;
